(0 e 0 ((goal-is-to unlock ?chest ?) nil nil) hold-chest-to-put-on-floor)
(1 i 1 ((thing ? ?chest ?surf light) [?surf] #<core$eval76$fn__77 rete.core$eval76$fn__77@3be5e1a3>))
(2 i 2 ((monkey ?thing ? ?) [?chest ?thing] #<core$eval80$fn__81 rete.core$eval80$fn__81@2513e259>))
(3 x 3 (not (goal-is-to hold ?chest ?) nil nil) hold-chest-to-put-on-floor 10 [?chest] #<core$eval84$fn__85 rete.core$eval84$fn__85@15136bda>)
(4 e 0 ((goal-is-to unlock ?chest ?) nil nil) put-chest-on-floor)
(5 i 2 ((monkey ?chest ?place ?on) nil nil))
(6 x 4 ((thing ? ?chest ? ?) nil nil) put-chest-on-floor 10 [?chest ?place ?on ?fids] #<core$eval88$fn__89 rete.core$eval88$fn__89@2c970551>)
(7 e 0 ((goal-is-to unlock ?obj ?) nil nil) get-key-to-unlock)
(8 i 5 ((thing ? ?obj floor ?) nil nil))
(9 i 6 ((chest ? ?obj ?key) nil nil))
(10 i 2 ((monkey ?thing ? ?) [?thing ?key] #<core$eval92$fn__93 rete.core$eval92$fn__93@45ad71f0>))
(11 x 3 (not (goal-is-to hold ?key ?) nil nil) get-key-to-unlock 10 [?key] #<core$eval96$fn__97 rete.core$eval96$fn__97@2ffad8fe>)
(12 e 0 ((goal-is-to unlock ?chest ?) nil nil) move-to-chest-with-key)
(13 i 2 ((monkey ?key ?mplace ?) nil nil))
(14 i 5 ((thing ?cplace ?chest floor ?) [?cplace ?mplace] #<core$eval100$fn__101 rete.core$eval100$fn__101@1b67ed25>))
(15 i 6 ((chest ? ?chest ?key) nil nil))
(16 x 7 (not (goal-is-to walk-to ?cplace ?) nil nil) move-to-chest-with-key 10 [?cplace] #<core$eval104$fn__105 rete.core$eval104$fn__105@6b3e9928>)
(17 e 0 ((goal-is-to unlock ?name ?) nil nil) unlock-chest-with-key)
(18 i 6 ((chest ?contents ?name ?key) nil nil))
(19 i 4 ((thing ?place ?name ?on ?) nil nil))
(20 x 2 ((monkey ?key ?place ?on) nil nil) unlock-chest-with-key 10 [?place ?fids ?contents ?name ?key] #<core$eval108$fn__109 rete.core$eval108$fn__109@37e80da0>)
(21 e 3 ((goal-is-to hold ?obj ?) nil nil) unlock-chest-to-hold-object)
(22 i 6 ((chest ?obj ?chest ?) nil nil))
(23 x 0 (not (goal-is-to unlock ?chest ?) nil nil) unlock-chest-to-hold-object 10 [?chest] #<core$eval112$fn__113 rete.core$eval112$fn__113@5b0fcabf>)
(24 e 3 ((goal-is-to hold ?obj ?) nil nil) use-ladder-to-hold)
(25 i 8 ((thing ?place ?obj ceiling light) nil nil))
(26 i 9 (not (thing ?place ladder ? ?) nil nil))
(27 x 10 (not (goal-is-to move ladder ?place) nil nil) use-ladder-to-hold 10 [?place] #<core$eval116$fn__117 rete.core$eval116$fn__117@53838e6>)
(28 e 3 ((goal-is-to hold ?obj ?) nil nil) climb-ladder-to-hold)
(29 i 8 ((thing ?place ?obj ceiling light) nil nil))
(30 i 11 ((thing ?place ladder floor ?) nil nil))
(31 i 2 ((monkey ? ? ?s) [?s] #<core$eval120$fn__121 rete.core$eval120$fn__121@7a06cf15>))
(32 x 12 (not (goal-is-to on ladder ?) nil nil) climb-ladder-to-hold 10 [] #<core$eval124$fn__125 rete.core$eval124$fn__125@7e999262>)
(33 e 3 ((goal-is-to hold ?name ?) nil nil) grab-object-from-ladder)
(34 i 8 ((thing ?place ?name ceiling light) nil nil))
(35 i 9 ((thing ?place ladder ? ?) nil nil))
(36 x 13 ((monkey blank ?place ladder) nil nil) grab-object-from-ladder 10 [?fids ?name] #<core$eval128$fn__129 rete.core$eval128$fn__129@3c94026e>)
(37 e 3 ((goal-is-to hold ?obj ?) nil nil) climb-to-hold)
(38 i 1 ((thing ?place ?obj ?on light) [?on] #<core$eval132$fn__133 rete.core$eval132$fn__133@72bf5dc6>))
(39 i 2 ((monkey ? ?place ?surf) [?on ?surf] #<core$eval136$fn__137 rete.core$eval136$fn__137@482ee6c8>))
(40 x 14 (not (goal-is-to on ?on ?) nil nil) climb-to-hold 10 [?on] #<core$eval140$fn__141 rete.core$eval140$fn__141@6dbe7935>)
(41 e 3 ((goal-is-to hold ?obj ?) nil nil) walk-to-hold)
(42 i 1 ((thing ?place ?obj ?surf light) [?surf] #<core$eval144$fn__145 rete.core$eval144$fn__145@1a28785c>))
(43 i 2 ((monkey ? ?loc ?) [?place ?loc] #<core$eval148$fn__149 rete.core$eval148$fn__149@7770c84c>))
(44 x 7 (not (goal-is-to walk-to ?place ?) nil nil) walk-to-hold 10 [?place] #<core$eval152$fn__153 rete.core$eval152$fn__153@523a4f93>)
(45 e 3 ((goal-is-to hold ?obj ?) nil nil) drop-to-hold)
(46 i 1 ((thing ?place ?obj ?on light) nil nil))
(47 i 2 ((monkey ?hold ?place ?on) [?hold] #<core$eval156$fn__157 rete.core$eval156$fn__157@5c4336ff>))
(48 x 15 (not (goal-is-to hold blank ?) nil nil) drop-to-hold 10 [] #<core$eval160$fn__161 rete.core$eval160$fn__161@5cdc1400>)
(49 e 3 ((goal-is-to hold ?name ?) nil nil) grab-object)
(50 i 1 ((thing ?place ?name ?on light) nil nil))
(51 x 16 ((monkey blank ?place ?on) nil nil) grab-object 10 [?fids ?name] #<core$eval164$fn__165 rete.core$eval164$fn__165@52ecb5eb>)
(52 e 15 ((goal-is-to hold blank ?) nil nil) drop-object)
(53 i 2 ((monkey ?name ?place ?on) [?name] #<core$eval168$fn__169 rete.core$eval168$fn__169@7ec42e5a>))
(54 x 4 ((thing ? ?name ? ?) nil nil) drop-object 10 [?place ?on ?fids ?name] #<core$eval172$fn__173 rete.core$eval172$fn__173@29ebe346>)
(55 e 17 ((goal-is-to move ?obj ?place) nil nil) unlock-chest-to-move-object)
(56 i 6 ((chest ?obj ?chest ?) nil nil))
(57 x 0 (not (goal-is-to unlock ?chest ?) nil nil) unlock-chest-to-move-object 10 [?chest] #<core$eval176$fn__177 rete.core$eval176$fn__177@71183515>)
(58 e 17 ((goal-is-to move ?obj ?place) nil nil) hold-object-to-move)
(59 i 1 ((thing ?loc ?obj ? light) [?place ?loc] #<core$eval180$fn__181 rete.core$eval180$fn__181@667209a3>))
(60 i 2 ((monkey ?hold ? ?) [?obj ?hold] #<core$eval184$fn__185 rete.core$eval184$fn__185@6cedb374>))
(61 x 3 (not (goal-is-to hold ?obj ?) nil nil) hold-object-to-move 10 [?obj] #<core$eval188$fn__189 rete.core$eval188$fn__189@196da649>)
(62 e 17 ((goal-is-to move ?obj ?place) nil nil) move-object-to-place)
(63 i 2 ((monkey ?obj ?loc ?) [?place ?loc] #<core$eval192$fn__193 rete.core$eval192$fn__193@6c33b94e>))
(64 x 7 (not (goal-is-to walk-to ?place ?) nil nil) move-object-to-place 10 [?place] #<core$eval196$fn__197 rete.core$eval196$fn__197@78ef3d21>)
(65 e 17 ((goal-is-to move ?name ?place) nil nil) drop-object-once-moved)
(66 i 2 ((monkey ?obj ?place ?) nil nil))
(67 x 1 ((thing ? ?name ? light) nil nil) drop-object-once-moved 10 [?place ?fids ?name] #<core$eval200$fn__201 rete.core$eval200$fn__201@3e9985a5>)
(68 e 17 ((goal-is-to move ?obj ?place) nil nil) already-moved-object)
(69 x 4 ((thing ?place ?obj ? ?) nil nil) already-moved-object 10 [?fids] #<core$eval204$fn__205 rete.core$eval204$fn__205@76d53356>)
(70 e 7 ((goal-is-to walk-to ?place ?) nil nil) already-at-place)
(71 x 2 ((monkey ? ?place ?) nil nil) already-at-place 10 [?fids] #<core$eval208$fn__209 rete.core$eval208$fn__209@10a22be9>)
(72 e 7 ((goal-is-to walk-to ?place ?) nil nil) get-on-floor-to-walk)
(73 i 2 ((monkey ? ?loc ?surf) [?place ?loc ?surf] #<core$eval212$fn__213 rete.core$eval212$fn__213@159a4d79>))
(74 x 18 (not (goal-is-to on floor ?) nil nil) get-on-floor-to-walk 10 [] #<core$eval217$fn__218 rete.core$eval217$fn__218@4b4cb9c6>)
(75 e 7 ((goal-is-to walk-to ?place ?) nil nil) walk-holding-nothing)
(76 x 19 ((monkey blank ?loc floor) [?place ?loc] #<core$eval221$fn__222 rete.core$eval221$fn__222@4de4926a>) walk-holding-nothing 10 [?place ?fids] #<core$eval225$fn__226 rete.core$eval225$fn__226@5ac0017a>)
(77 e 7 ((goal-is-to walk-to ?place ?) nil nil) walk-holding-object)
(78 x 20 ((monkey ?obj ?loc floor) [?place ?obj ?loc] #<core$eval229$fn__230 rete.core$eval229$fn__230@695fd9a5>) walk-holding-object 10 [?place ?obj ?fids] #<core$eval234$fn__235 rete.core$eval234$fn__235@6bba7d61>)
(79 e 18 ((goal-is-to on floor ?) nil nil) jump-onto-floor)
(80 x 2 ((monkey ? ? ?on) [?on] #<core$eval238$fn__239 rete.core$eval238$fn__239@7857df88>) jump-onto-floor 10 [?on ?fids] #<core$eval242$fn__243 rete.core$eval242$fn__243@cbc5ae4>)
(81 e 14 ((goal-is-to on ?obj ?) nil nil) walk-to-place-to-climb)
(82 i 4 ((thing ?place ?obj ? ?) nil nil))
(83 i 2 ((monkey ? ?loc ?) [?place ?loc] #<core$eval246$fn__247 rete.core$eval246$fn__247@30ad8942>))
(84 x 7 (not (goal-is-to walk-to ?place ?) nil nil) walk-to-place-to-climb 10 [?place] #<core$eval250$fn__251 rete.core$eval250$fn__251@70dfb596>)
(85 e 14 ((goal-is-to on ?obj ?) nil nil) drop-to-climb)
(86 i 4 ((thing ?place ?obj ? ?) nil nil))
(87 i 2 ((monkey ?hold ?place ?) [?hold] #<core$eval254$fn__255 rete.core$eval254$fn__255@7b26b7df>))
(88 x 15 (not (goal-is-to hold blank ?) nil nil) drop-to-climb 10 [] #<core$eval258$fn__259 rete.core$eval258$fn__259@478e2443>)
(89 e 14 ((goal-is-to on ?obj ?) nil nil) climb-indirectly)
(90 i 4 ((thing ?place ?obj ?on ?) nil nil))
(91 i 16 ((monkey blank ?place ?on2) [?on2 ?on ?obj] #<core$eval262$fn__263 rete.core$eval262$fn__263@e507c5f>))
(92 x 14 (not (goal-is-to on ?on ?) nil nil) climb-indirectly 10 [?on] #<core$eval267$fn__268 rete.core$eval267$fn__268@2e4996ea>)
(93 e 14 ((goal-is-to on ?obj ?) nil nil) climb-directly)
(94 i 4 ((thing ?place ?obj ?on ?) nil nil))
(95 x 16 ((monkey blank ?place ?on) nil nil) climb-directly 10 [?obj ?fids] #<core$eval271$fn__272 rete.core$eval271$fn__272@31a9c687>)
(96 e 14 ((goal-is-to on ?obj ?) nil nil) already-on-object)
(97 x 2 ((monkey ? ? ?obj) nil nil) already-on-object 10 [?fids] #<core$eval275$fn__276 rete.core$eval275$fn__276@20578144>)
(98 e 21 ((goal-is-to eat ?obj ?) nil nil) hold-to-eat)
(99 i 2 ((monkey ?h ? ?) [?h ?obj] #<core$eval279$fn__280 rete.core$eval279$fn__280@29268db6>))
(100 x 3 (not (goal-is-to hold ?obj ?) nil nil) hold-to-eat 10 [?obj] #<core$eval283$fn__284 rete.core$eval283$fn__284@667439fe>)
(101 e 21 ((goal-is-to eat ?name ?) nil nil) satisfy-hunger)
(102 i 2 ((monkey ?name ? ?) nil nil))
(103 x 4 ((thing ? ?name ? ?) nil nil) satisfy-hunger 10 [?fids ?name] #<core$eval287$fn__288 rete.core$eval287$fn__288@188fd321>)
