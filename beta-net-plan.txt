(0 e 0 ((Goal unlock :?chest :?) nil nil) "Hold-chest-to-put-on-floor")
(1 i 1 ((Thing :? :?chest :?surf light) (:?surf) #object[clojure.core$eval2136$fn__2137 0x62828176 "clojure.core$eval2136$fn__2137@62828176"]))
(2 i 2 ((Monkey :?thing :? :?) (:?chest :?thing) #object[clojure.core$eval2140$fn__2141 0x20ff88ba "clojure.core$eval2140$fn__2141@20ff88ba"]))
(3 x 3 (not (Goal hold :?chest :?) nil nil) "Hold-chest-to-put-on-floor" 0 (:?chest) #object[clojure.core$eval2144$fn__2145 0x77f0e9e3 "clojure.core$eval2144$fn__2145@77f0e9e3"])
(4 e 0 ((Goal unlock :?chest :?) nil nil) "Put-chest-on-floor")
(5 i 2 ((Monkey :?chest :?place :?on) nil nil))
(6 x 4 ((Thing :? :?chest :? :?) nil nil) "Put-chest-on-floor" 0 (:?chest :?place :?on :?fids) #object[clojure.core$eval2148$fn__2149 0xb1e8cfd "clojure.core$eval2148$fn__2149@b1e8cfd"])
(7 e 0 ((Goal unlock :?obj :?) nil nil) "Get-key-to-unlock")
(8 i 5 ((Thing :? :?obj floor :?) nil nil))
(9 i 6 ((Chest :? :?obj :?key) nil nil))
(10 i 2 ((Monkey :?thing :? :?) (:?thing :?key) #object[clojure.core$eval2152$fn__2153 0x4f100e0e "clojure.core$eval2152$fn__2153@4f100e0e"]))
(11 x 3 (not (Goal hold :?key :?) nil nil) "Get-key-to-unlock" 0 (:?key) #object[clojure.core$eval2156$fn__2157 0x602c1d70 "clojure.core$eval2156$fn__2157@602c1d70"])
(12 e 0 ((Goal unlock :?chest :?) nil nil) "Move-to-chest-with-key")
(13 i 2 ((Monkey :?key :?mplace :?) nil nil))
(14 i 5 ((Thing :?cplace :?chest floor :?) (:?cplace :?mplace) #object[clojure.core$eval2160$fn__2161 0x6298c47b "clojure.core$eval2160$fn__2161@6298c47b"]))
(15 i 6 ((Chest :? :?chest :?key) nil nil))
(16 x 7 (not (Goal walk-to :?cplace :?) nil nil) "Move-to-chest-with-key" 0 (:?cplace) #object[clojure.core$eval2164$fn__2165 0x6ae071c2 "clojure.core$eval2164$fn__2165@6ae071c2"])
(17 e 0 ((Goal unlock :?name :?) nil nil) "Unlock-chest-with-key")
(18 i 6 ((Chest :?contents :?name :?key) nil nil))
(19 i 4 ((Thing :?place :?name :?on :?) nil nil))
(20 x 2 ((Monkey :?key :?place :?on) nil nil) "Unlock-chest-with-key" 0 (:?place :?fids :?contents :?name :?key) #object[clojure.core$eval2168$fn__2169 0x12d82abb "clojure.core$eval2168$fn__2169@12d82abb"])
(21 e 3 ((Goal hold :?obj :?) nil nil) "Unlock-chest-to-hold-object")
(22 i 6 ((Chest :?obj :?chest :?) nil nil))
(23 x 0 (not (Goal unlock :?chest :?) nil nil) "Unlock-chest-to-hold-object" 0 (:?chest) #object[clojure.core$eval2172$fn__2173 0x7c59ae50 "clojure.core$eval2172$fn__2173@7c59ae50"])
(24 e 3 ((Goal hold :?obj :?) nil nil) "Use-ladder-to-hold")
(25 i 8 ((Thing :?place :?obj ceiling light) nil nil))
(26 i 9 (not (Thing :?place ladder :? :?) nil nil))
(27 x 10 (not (Goal move ladder :?place) nil nil) "Use-ladder-to-hold" 0 (:?place) #object[clojure.core$eval2176$fn__2177 0x7a88f2cd "clojure.core$eval2176$fn__2177@7a88f2cd"])
(28 e 3 ((Goal hold :?obj :?) nil nil) "Climb-ladder-to-hold")
(29 i 8 ((Thing :?place :?obj ceiling light) nil nil))
(30 i 11 ((Thing :?place ladder floor :?) nil nil))
(31 i 2 ((Monkey :? :? :?s) (:?s) #object[clojure.core$eval2180$fn__2181 0x28e989 "clojure.core$eval2180$fn__2181@28e989"]))
(32 x 12 (not (Goal on ladder :?) nil nil) "Climb-ladder-to-hold" 0 () #object[clojure.core$eval2184$fn__2185 0x32b34602 "clojure.core$eval2184$fn__2185@32b34602"])
(33 e 3 ((Goal hold :?name :?) nil nil) "Grab-object-from-ladder")
(34 i 8 ((Thing :?place :?name ceiling light) nil nil))
(35 i 9 ((Thing :?place ladder :? :?) nil nil))
(36 x 13 ((Monkey blank :?place ladder) nil nil) "Grab-object-from-ladder" 0 (:?fids :?name) #object[clojure.core$eval2188$fn__2189 0x7624a4bb "clojure.core$eval2188$fn__2189@7624a4bb"])
(37 e 3 ((Goal hold :?obj :?) nil nil) "Climb-to-hold")
(38 i 1 ((Thing :?place :?obj :?on light) (:?on) #object[clojure.core$eval2192$fn__2193 0x7193910b "clojure.core$eval2192$fn__2193@7193910b"]))
(39 i 2 ((Monkey :? :?place :?surf) (:?on :?surf) #object[clojure.core$eval2196$fn__2197 0x1c4db48f "clojure.core$eval2196$fn__2197@1c4db48f"]))
(40 x 14 (not (Goal on :?on :?) nil nil) "Climb-to-hold" 0 (:?on) #object[clojure.core$eval2200$fn__2201 0x28083bc6 "clojure.core$eval2200$fn__2201@28083bc6"])
(41 e 3 ((Goal hold :?obj :?) nil nil) "Walk-to-hold")
(42 i 1 ((Thing :?place :?obj :?surf light) (:?surf) #object[clojure.core$eval2204$fn__2205 0x279d1fe0 "clojure.core$eval2204$fn__2205@279d1fe0"]))
(43 i 2 ((Monkey :? :?loc :?) (:?place :?loc) #object[clojure.core$eval2208$fn__2209 0x6c73699 "clojure.core$eval2208$fn__2209@6c73699"]))
(44 x 7 (not (Goal walk-to :?place :?) nil nil) "Walk-to-hold" 0 (:?place) #object[clojure.core$eval2212$fn__2213 0x2c1c2f8c "clojure.core$eval2212$fn__2213@2c1c2f8c"])
(45 e 3 ((Goal hold :?obj :?) nil nil) "Drop-to-hold")
(46 i 1 ((Thing :?place :?obj :?on light) nil nil))
(47 i 2 ((Monkey :?hold :?place :?on) (:?hold) #object[clojure.core$eval2216$fn__2217 0x447f0d4c "clojure.core$eval2216$fn__2217@447f0d4c"]))
(48 x 15 (not (Goal hold blank :?) nil nil) "Drop-to-hold" 0 () #object[clojure.core$eval2220$fn__2221 0x219f43bf "clojure.core$eval2220$fn__2221@219f43bf"])
(49 e 3 ((Goal hold :?name :?) nil nil) "Grab-object")
(50 i 1 ((Thing :?place :?name :?on light) nil nil))
(51 x 16 ((Monkey blank :?place :?on) nil nil) "Grab-object" 0 (:?fids :?name) #object[clojure.core$eval2224$fn__2225 0x1844bed5 "clojure.core$eval2224$fn__2225@1844bed5"])
(52 e 15 ((Goal hold blank :?) nil nil) "Drop-object")
(53 i 2 ((Monkey :?name :?place :?on) (:?name) #object[clojure.core$eval2228$fn__2229 0x4c7be0cf "clojure.core$eval2228$fn__2229@4c7be0cf"]))
(54 x 4 ((Thing :? :?name :? :?) nil nil) "Drop-object" 0 (:?place :?on :?fids :?name) #object[clojure.core$eval2232$fn__2233 0x32f5c23 "clojure.core$eval2232$fn__2233@32f5c23"])
(55 e 17 ((Goal move :?obj :?place) nil nil) "Unlock-chest-to-move-object")
(56 i 6 ((Chest :?obj :?chest :?) nil nil))
(57 x 0 (not (Goal unlock :?chest :?) nil nil) "Unlock-chest-to-move-object" 0 (:?chest) #object[clojure.core$eval2236$fn__2237 0xd0b79 "clojure.core$eval2236$fn__2237@d0b79"])
(58 e 17 ((Goal move :?obj :?place) nil nil) "Hold-object-to-move")
(59 i 1 ((Thing :?loc :?obj :? light) (:?place :?loc) #object[clojure.core$eval2240$fn__2241 0x7af3f0f9 "clojure.core$eval2240$fn__2241@7af3f0f9"]))
(60 i 2 ((Monkey :?hold :? :?) (:?obj :?hold) #object[clojure.core$eval2244$fn__2245 0x433edb30 "clojure.core$eval2244$fn__2245@433edb30"]))
(61 x 3 (not (Goal hold :?obj :?) nil nil) "Hold-object-to-move" 0 (:?obj) #object[clojure.core$eval2248$fn__2249 0x6506f099 "clojure.core$eval2248$fn__2249@6506f099"])
(62 e 17 ((Goal move :?obj :?place) nil nil) "Move-object-to-place")
(63 i 2 ((Monkey :?obj :?loc :?) (:?place :?loc) #object[clojure.core$eval2252$fn__2253 0x35258c9d "clojure.core$eval2252$fn__2253@35258c9d"]))
(64 x 7 (not (Goal walk-to :?place :?) nil nil) "Move-object-to-place" 0 (:?place) #object[clojure.core$eval2256$fn__2257 0x59b83862 "clojure.core$eval2256$fn__2257@59b83862"])
(65 e 17 ((Goal move :?name :?place) nil nil) "Drop-object-once-moved")
(66 i 2 ((Monkey :?obj :?place :?) nil nil))
(67 x 1 ((Thing :? :?name :? light) nil nil) "Drop-object-once-moved" 0 (:?place :?fids :?name) #object[clojure.core$eval2260$fn__2261 0x1f3969d "clojure.core$eval2260$fn__2261@1f3969d"])
(68 e 17 ((Goal move :?obj :?place) nil nil) "Already-moved-object")
(69 x 4 ((Thing :?place :?obj :? :?) nil nil) "Already-moved-object" 0 (:?fids) #object[clojure.core$eval2264$fn__2265 0x7b7c1029 "clojure.core$eval2264$fn__2265@7b7c1029"])
(70 e 7 ((Goal walk-to :?place :?) nil nil) "Already-at-place")
(71 x 2 ((Monkey :? :?place :?) nil nil) "Already-at-place" 0 (:?fids) #object[clojure.core$eval2268$fn__2269 0x7998e23 "clojure.core$eval2268$fn__2269@7998e23"])
(72 e 7 ((Goal walk-to :?place :?) nil nil) "Get-on-floor-to-walk")
(73 i 2 ((Monkey :? :?loc :?surf) (:?place :?loc :?surf) #object[clojure.core$eval2272$fn__2273 0x130e79a0 "clojure.core$eval2272$fn__2273@130e79a0"]))
(74 x 18 (not (Goal on floor :?) nil nil) "Get-on-floor-to-walk" 0 () #object[clojure.core$eval2277$fn__2278 0x2652eb8e "clojure.core$eval2277$fn__2278@2652eb8e"])
(75 e 7 ((Goal walk-to :?place :?) nil nil) "Walk-holding-nothing")
(76 x 19 ((Monkey blank :?loc floor) (:?place :?loc) #object[clojure.core$eval2281$fn__2282 0x2aa5566c "clojure.core$eval2281$fn__2282@2aa5566c"]) "Walk-holding-nothing" 0 (:?place :?fids) #object[clojure.core$eval2285$fn__2286 0x6a7332c6 "clojure.core$eval2285$fn__2286@6a7332c6"])
(77 e 7 ((Goal walk-to :?place :?) nil nil) "Walk-holding-object")
(78 x 20 ((Monkey :?obj :?loc floor) (:?place :?obj :?loc) #object[clojure.core$eval2289$fn__2290 0x3673238e "clojure.core$eval2289$fn__2290@3673238e"]) "Walk-holding-object" 0 (:?place :?obj :?fids) #object[clojure.core$eval2294$fn__2295 0x48a0a298 "clojure.core$eval2294$fn__2295@48a0a298"])
(79 e 18 ((Goal on floor :?) nil nil) "Jump-onto-floor")
(80 x 2 ((Monkey :? :? :?on) (:?on) #object[clojure.core$eval2298$fn__2299 0x24c88533 "clojure.core$eval2298$fn__2299@24c88533"]) "Jump-onto-floor" 0 (:?on :?fids) #object[clojure.core$eval2302$fn__2303 0x577fb4f2 "clojure.core$eval2302$fn__2303@577fb4f2"])
(81 e 14 ((Goal on :?obj :?) nil nil) "Walk-to-place-to-climb")
(82 i 4 ((Thing :?place :?obj :? :?) nil nil))
(83 i 2 ((Monkey :? :?loc :?) (:?place :?loc) #object[clojure.core$eval2306$fn__2307 0x26a8c494 "clojure.core$eval2306$fn__2307@26a8c494"]))
(84 x 7 (not (Goal walk-to :?place :?) nil nil) "Walk-to-place-to-climb" 0 (:?place) #object[clojure.core$eval2310$fn__2311 0x61f9c985 "clojure.core$eval2310$fn__2311@61f9c985"])
(85 e 14 ((Goal on :?obj :?) nil nil) "Drop-to-climb")
(86 i 4 ((Thing :?place :?obj :? :?) nil nil))
(87 i 2 ((Monkey :?hold :?place :?) (:?hold) #object[clojure.core$eval2314$fn__2315 0x1ce7003e "clojure.core$eval2314$fn__2315@1ce7003e"]))
(88 x 15 (not (Goal hold blank :?) nil nil) "Drop-to-climb" 0 () #object[clojure.core$eval2318$fn__2319 0x4dbf0208 "clojure.core$eval2318$fn__2319@4dbf0208"])
(89 e 14 ((Goal on :?obj :?) nil nil) "Climb-indirectly")
(90 i 4 ((Thing :?place :?obj :?on :?) nil nil))
(91 i 16 ((Monkey blank :?place :?on2) (:?on2 :?on :?obj) #object[clojure.core$eval2322$fn__2323 0x6b9635b9 "clojure.core$eval2322$fn__2323@6b9635b9"]))
(92 x 14 (not (Goal on :?on :?) nil nil) "Climb-indirectly" 0 (:?on) #object[clojure.core$eval2327$fn__2328 0x3012e5ab "clojure.core$eval2327$fn__2328@3012e5ab"])
(93 e 14 ((Goal on :?obj :?) nil nil) "Climb-directly")
(94 i 4 ((Thing :?place :?obj :?on :?) nil nil))
(95 x 16 ((Monkey blank :?place :?on) nil nil) "Climb-directly" 0 (:?obj :?fids) #object[clojure.core$eval2331$fn__2332 0x4e6b2656 "clojure.core$eval2331$fn__2332@4e6b2656"])
(96 e 14 ((Goal on :?obj :?) nil nil) "Already-on-object")
(97 x 2 ((Monkey :? :? :?obj) nil nil) "Already-on-object" 0 (:?fids) #object[clojure.core$eval2335$fn__2336 0x75c66962 "clojure.core$eval2335$fn__2336@75c66962"])
(98 e 21 ((Goal eat :?obj :?) nil nil) "Hold-to-eat")
(99 i 2 ((Monkey :?h :? :?) (:?h :?obj) #object[clojure.core$eval2339$fn__2340 0x1d56d081 "clojure.core$eval2339$fn__2340@1d56d081"]))
(100 x 3 (not (Goal hold :?obj :?) nil nil) "Hold-to-eat" 0 (:?obj) #object[clojure.core$eval2343$fn__2344 0x45ab3500 "clojure.core$eval2343$fn__2344@45ab3500"])
(101 e 21 ((Goal eat :?name :?) nil nil) "Satisfy-hunger")
(102 i 2 ((Monkey :?name :? :?) nil nil))
(103 x 4 ((Thing :? :?name :? :?) nil nil) "Satisfy-hunger" 0 (:?fids :?name) #object[clojure.core$eval2347$fn__2348 0x4008bd2e "clojure.core$eval2347$fn__2348@4008bd2e"])
