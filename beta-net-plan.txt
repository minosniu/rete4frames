(0 e 0 (stage {value duplicate} nil nil) r-reverse-edges)
(1 x 1 (line {p2 ?p2, p1 ?p1} nil nil) r-reverse-edges 0 [?p2 ?fids ?p1] #<core$eval1214$fn__1215 rete.core$eval1214$fn__1215@7e4d5e01>)
(2 ex 0 (stage {value duplicate} nil nil) r-done-reversing -10 [?fids] #<core$eval1218$fn__1219 rete.core$eval1218$fn__1219@7c3c62e8>)
(3 e 2 (stage {value detect-junctions} nil nil) r-make-3-junction)
(4 i 3 (edge {p2 ?p1, joined FALSE, p1 ?base-point} nil nil))
(5 i 3 (edge {p2 ?p2, joined FALSE, p1 ?base-point} [?p2 ?p1] #<core$eval1222$fn__1223 rete.core$eval1222$fn__1223@21432a60>))
(6 x 3 (edge {p2 ?p3, joined FALSE, p1 ?base-point} [?p2 ?p1 ?p3] #<core$eval1226$fn__1227 rete.core$eval1226$fn__1227@2a39bb36>) r-make-3-junction 10 [?p2 ?base-point ?fids ?p1 ?p3] #<core$eval1231$fn__1232 rete.core$eval1231$fn__1232@5c1a5fa7>)
(7 e 2 (stage {value detect-junctions} nil nil) r1-make-L)
(8 i 3 (edge {p2 ?p2, joined FALSE, p1 ?base-point} nil nil))
(9 i 3 (edge {p2 ?p3, joined FALSE, p1 ?base-point} [?p2 ?p3] #<core$eval1235$fn__1236 rete.core$eval1235$fn__1236@38714d56>))
(10 x 4 (not edge {p1 ?base-point} nil nil) r1-make-L 0 [?p2 ?base-point ?fids ?p3] #<core$eval1239$fn__1240 rete.core$eval1239$fn__1240@6db4b914>)
(11 e 2 (stage {value detect-junctions} nil nil) r2-make-L)
(12 i 3 (edge {p2 ?p2, joined FALSE, p1 ?base-point} nil nil))
(13 i 3 (edge {p2 ?p3, joined FALSE, p1 ?base-point} [?p2 ?p3] #<core$eval1243$fn__1244 rete.core$eval1243$fn__1244@452f1015>))
(14 x 4 (edge {p2 ?p4, p1 ?base-point} [?p2 ?p3 ?p4 ?e2] #<core$eval1247$fn__1248 rete.core$eval1247$fn__1248@3e473e54>) r2-make-L 0 [?p2 ?base-point ?fids ?p3] #<core$eval1253$fn__1254 rete.core$eval1253$fn__1254@76e8162b>)
(15 ex 2 (stage {value detect-junctions} nil nil) r-done-detecting -10 [?fids] #<core$eval1257$fn__1258 rete.core$eval1257$fn__1258@374287a9>)
(16 e 5 (stage {value find-limits} nil nil) r-find-limits-max)
(17 i 6 (limits {max ?max} nil nil))
(18 x 7 (junct {base-point ?bp} [?max ?bp] #<core$eval1261$fn__1262 rete.core$eval1261$fn__1262@540c1b0d>) r-find-limits-max 5 [?fids ?bp] #<core$eval1265$fn__1266 rete.core$eval1265$fn__1266@7c914797>)
(19 e 5 (stage {value find-limits} nil nil) r-find-limits-min)
(20 i 6 (limits {min ?min} nil nil))
(21 x 7 (junct {base-point ?bp} [?min ?bp] #<core$eval1269$fn__1270 rete.core$eval1269$fn__1270@491dbb6b>) r-find-limits-min 5 [?fids ?bp] #<core$eval1273$fn__1274 rete.core$eval1273$fn__1274@226c955e>)
(22 ex 5 (stage {value find-limits} nil nil) r-done-find-limits 0 [?fids] #<core$eval1277$fn__1278 rete.core$eval1277$fn__1278@4a7024b1>)
(23 e 8 (stage {value find-initial-boundary} nil nil) r-initial-boundary-junction-L)
(24 i 6 (limits {max ?max} nil nil))
(25 i 9 (junct {p2 ?p2, type L, p1 ?p1, base-point ?base-point} [?base-point ?max] #<core$eval1281$fn__1282 rete.core$eval1281$fn__1282@476c2bb6>))
(26 i 4 (edge {p2 ?p1, p1 ?base-point} nil nil))
(27 x 4 (edge {p2 ?p2, p1 ?base-point} nil nil) r-initial-boundary-junction-L 0 [?fids] #<core$eval1285$fn__1286 rete.core$eval1285$fn__1286@54f75a71>)
(28 e 8 (stage {value find-initial-boundary} nil nil) r-initial-boundary-junction-arrow)
(29 i 6 (limits {max ?max} nil nil))
(30 i 10 (junct {p2 ?p2, p3 ?p3, type arrow, p1 ?p1, base-point ?bp} [?max ?bp] #<core$eval1289$fn__1290 rete.core$eval1289$fn__1290@165cef0c>))
(31 i 4 (edge {p2 ?p1, p1 ?bp} nil nil))
(32 i 4 (edge {p2 ?p2, p1 ?bp} nil nil))
(33 x 4 (edge {p2 ?p3, p1 ?bp} nil nil) r-initial-boundary-junction-arrow 0 [?fids] #<core$eval1293$fn__1294 rete.core$eval1293$fn__1294@47965ff3>)
(34 e 11 (stage {value find-second-boundary} nil nil) r-second-boundary-junction-L)
(35 i 6 (limits {min ?min} nil nil))
(36 i 9 (junct {p2 ?p2, type L, p1 ?p1, base-point ?bp} [?min ?bp] #<core$eval1297$fn__1298 rete.core$eval1297$fn__1298@778adf2f>))
(37 i 4 (edge {p2 ?p1, p1 ?base-point} nil nil))
(38 x 4 (edge {p2 ?p2, p1 ?base-point} nil nil) r-second-boundary-junction-L 0 [?fids] #<core$eval1301$fn__1302 rete.core$eval1301$fn__1302@27ca0e3b>)
(39 e 11 (stage {value find-second-boundary} nil nil) r-second-boundary-junction-arrow)
(40 i 6 (limits {min ?min} nil nil))
(41 i 10 (junct {p2 ?p2, p3 ?p3, type arrow, p1 ?p1, base-point ?bp} [?min ?bp] #<core$eval1305$fn__1306 rete.core$eval1305$fn__1306@3cc425b2>))
(42 i 4 (edge {p2 ?p1, p1 ?bp} nil nil))
(43 i 4 (edge {p2 ?p2, p1 ?bp} nil nil))
(44 x 4 (edge {p2 ?p3, p1 ?bp} nil nil) r-second-boundary-junction-arrow 0 [?fids] #<core$eval1309$fn__1310 rete.core$eval1309$fn__1310@441b6bab>)
(45 e 12 (stage {value labeling} nil nil) r-match-edge)
(46 i 4 (edge {p2 ?p2, p1 ?p1, label ?l} [?l] #<core$eval1313$fn__1314 rete.core$eval1313$fn__1314@7902c9f5>))
(47 x 13 (edge {p2 ?p1, p1 ?p2, label NIL} nil nil) r-match-edge 0 [?fids ?l] #<core$eval1319$fn__1320 rete.core$eval1319$fn__1320@1448f8cb>)
(48 e 12 (stage {value labeling} nil nil) r-label-L)
(49 i 9 (junct {type L, base-point ?p1} nil nil))
(50 i 4 (edge {p2 ?p2, p1 ?p1, label ?l} [?l] #<core$eval1323$fn__1324 rete.core$eval1323$fn__1324@39677ff0>))
(51 x 13 (edge {p2 ?p3, p1 ?p1, label NIL} [?p2 ?p3] #<core$eval1328$fn__1329 rete.core$eval1328$fn__1329@3e622574>) r-label-L 0 [?fids] #<core$eval1332$fn__1333 rete.core$eval1332$fn__1333@80c8fe2>)
(52 e 12 (stage {value labeling} nil nil) r-label-tee-A)
(53 i 14 (junct {p2 ?p2, p3 ?p3, type tee, p1 ?p1, base-point ?bp} nil nil))
(54 i 13 (edge {p2 ?p1, p1 ?bp, label NIL} nil nil))
(55 x 4 (edge {p2 ?p3, p1 ?bp} nil nil) r-label-tee-A 5 [?fids] #<core$eval1336$fn__1337 rete.core$eval1336$fn__1337@178b0831>)
(56 e 12 (stage {value labeling} nil nil) r-label-tee-B)
(57 i 14 (junct {p2 ?p2, p3 ?p3, type tee, p1 ?p1, base-point ?bp} nil nil))
(58 i 4 (edge {p2 ?p1, p1 ?bp} nil nil))
(59 x 13 (edge {p2 ?p3, p1 ?bp, label NIL} nil nil) r-label-tee-B 0 [?fids] #<core$eval1340$fn__1341 rete.core$eval1340$fn__1341@25a75631>)
(60 e 12 (stage {value labeling} nil nil) r-label-fork-1)
(61 i 15 (junct {type fork, base-point ?bp} nil nil))
(62 i 16 (edge {p2 ?p1, p1 ?bp, label PLUS} nil nil))
(63 i 13 (edge {p2 ?p2, p1 ?bp, label NIL} [?p2 ?p1] #<core$eval1344$fn__1345 rete.core$eval1344$fn__1345@67740bd7>))
(64 x 4 (edge {p2 ?p3, p1 ?bp} [?p2 ?p1 ?p3] #<core$eval1348$fn__1349 rete.core$eval1348$fn__1349@6c2e91ac>) r-label-fork-1 0 [?fids] #<core$eval1353$fn__1354 rete.core$eval1353$fn__1354@7c698adc>)
(65 e 12 (stage {value labeling} nil nil) r-label-fork-2)
(66 i 15 (junct {type fork, base-point ?bp} nil nil))
(67 i 17 (edge {p2 ?p1, p1 ?bp, label B} nil nil))
(68 i 18 (edge {p2 ?p2, p1 ?bp, label MINUS} [?p2 ?p1] #<core$eval1357$fn__1358 rete.core$eval1357$fn__1358@19db0a1d>))
(69 x 13 (edge {p2 ?p3, p1 ?bp, label NIL} [?p2 ?p1 ?p3] #<core$eval1361$fn__1362 rete.core$eval1361$fn__1362@59933139>) r-label-fork-2 0 [?fids] #<core$eval1366$fn__1367 rete.core$eval1366$fn__1367@13836c80>)
(70 e 12 (stage {value labeling} nil nil) r-label-fork-3)
(71 i 15 (junct {type fork, base-point ?bp} nil nil))
(72 i 17 (edge {p2 ?p1, p1 ?bp, label B} nil nil))
(73 i 17 (edge {p2 ?p2, p1 ?bp, label B} [?p2 ?p1] #<core$eval1370$fn__1371 rete.core$eval1370$fn__1371@16f55e8c>))
(74 x 13 (edge {p2 ?p3, p1 ?bp, label NIL} [?p2 ?p1 ?p3] #<core$eval1374$fn__1375 rete.core$eval1374$fn__1375@115e01c2>) r-label-fork-3 0 [?fids] #<core$eval1379$fn__1380 rete.core$eval1379$fn__1380@30df3bd5>)
(75 e 12 (stage {value labeling} nil nil) r-label-fork-4)
(76 i 15 (junct {type fork, base-point ?bp} nil nil))
(77 i 18 (edge {p2 ?p1, p1 ?bp, label MINUS} nil nil))
(78 i 18 (edge {p2 ?p2, p1 ?bp, label MINUS} [?p2 ?p1] #<core$eval1383$fn__1384 rete.core$eval1383$fn__1384@b4e49bb>))
(79 x 13 (edge {p2 ?p3, p1 ?bp, label NIL} [?p2 ?p1 ?p3] #<core$eval1387$fn__1388 rete.core$eval1387$fn__1388@cb9a647>) r-label-fork-4 0 [?fids] #<core$eval1392$fn__1393 rete.core$eval1392$fn__1393@22277671>)
(80 e 12 (stage {value labeling} nil nil) r-label-arrow-1A)
(81 i 10 (junct {p2 ?p2, p3 ?p3, type arrow, p1 ?p1, base-point ?bp} nil nil))
(82 i 4 (edge {p2 ?p1, p1 ?bp, label ?l} [?l] #<core$eval1396$fn__1397 rete.core$eval1396$fn__1397@29564eeb>))
(83 i 13 (edge {p2 ?p2, p1 ?bp, label NIL} nil nil))
(84 x 4 (edge {p2 ?p3, p1 ?bp} nil nil) r-label-arrow-1A 5 [?fids ?l] #<core$eval1401$fn__1402 rete.core$eval1401$fn__1402@1d26b9db>)
(85 e 12 (stage {value labeling} nil nil) r-label-arrow-1B)
(86 i 10 (junct {p2 ?p2, p3 ?p3, type arrow, p1 ?p1, base-point ?bp} nil nil))
(87 i 4 (edge {p2 ?p1, p1 ?bp, label ?l} [?l] #<core$eval1405$fn__1406 rete.core$eval1405$fn__1406@4ca34ccd>))
(88 i 4 (edge {p2 ?p2, p1 ?bp} nil nil))
(89 x 13 (edge {p2 ?p3, p1 ?bp, label NIL} nil nil) r-label-arrow-1B 0 [?fids ?l] #<core$eval1410$fn__1411 rete.core$eval1410$fn__1411@6a915c8c>)
(90 e 12 (stage {value labeling} nil nil) r-label-arrow-2A)
(91 i 10 (junct {p2 ?p2, p3 ?p3, type arrow, p1 ?p1, base-point ?bp} nil nil))
(92 i 4 (edge {p2 ?p3, p1 ?bp, label ?l} [?l] #<core$eval1414$fn__1415 rete.core$eval1414$fn__1415@171eed41>))
(93 i 13 (edge {p2 ?p2, p1 ?bp, label NIL} nil nil))
(94 x 4 (edge {p2 ?p1, p1 ?bp} nil nil) r-label-arrow-2A 5 [?fids ?l] #<core$eval1419$fn__1420 rete.core$eval1419$fn__1420@74af624b>)
(95 e 12 (stage {value labeling} nil nil) r-label-arrow-2B)
(96 i 10 (junct {p2 ?p2, p3 ?p3, type arrow, p1 ?p1, base-point ?bp} nil nil))
(97 i 4 (edge {p2 ?p3, p1 ?bp, label ?l} [?l] #<core$eval1423$fn__1424 rete.core$eval1423$fn__1424@834e67d>))
(98 i 4 (edge {p2 ?p2, p1 ?bp} nil nil))
(99 x 13 (edge {p2 ?p1, p1 ?bp, label NIL} nil nil) r-label-arrow-2B 0 [?fids ?l] #<core$eval1428$fn__1429 rete.core$eval1428$fn__1429@726c554>)
(100 e 12 (stage {value labeling} nil nil) r-label-arrow-3A)
(101 i 10 (junct {p2 ?p2, p3 ?p3, type arrow, p1 ?p1, base-point ?bp} nil nil))
(102 i 16 (edge {p2 ?p1, p1 ?bp, label PLUS} nil nil))
(103 i 13 (edge {p2 ?p2, p1 ?bp, label NIL} nil nil))
(104 x 4 (edge {p2 ?p3, p1 ?bp} nil nil) r-label-arrow-3A 5 [?fids] #<core$eval1432$fn__1433 rete.core$eval1432$fn__1433@36862391>)
(105 e 12 (stage {value labeling} nil nil) r-label-arrow-3B)
(106 i 10 (junct {p2 ?p2, p3 ?p3, type arrow, p1 ?p1, base-point ?bp} nil nil))
(107 i 16 (edge {p2 ?p1, p1 ?bp, label PLUS} nil nil))
(108 i 4 (edge {p2 ?p2, p1 ?bp} nil nil))
(109 x 13 (edge {p2 ?p3, p1 ?bp, label NIL} nil nil) r-label-arrow-3B 0 [?fids] #<core$eval1436$fn__1437 rete.core$eval1436$fn__1437@69222fc3>)
(110 e 12 (stage {value labeling} nil nil) r-label-arrow-4A)
(111 i 10 (junct {p2 ?p2, p3 ?p3, type arrow, p1 ?p1, base-point ?bp} nil nil))
(112 i 16 (edge {p2 ?p3, p1 ?bp, label PLUS} nil nil))
(113 i 13 (edge {p2 ?p2, p1 ?bp, label NIL} nil nil))
(114 x 4 (edge {p2 ?p1, p1 ?bp} nil nil) r-label-arrow-4A 5 [?fids] #<core$eval1440$fn__1441 rete.core$eval1440$fn__1441@4ebbc946>)
(115 e 12 (stage {value labeling} nil nil) r-label-arrow-4B)
(116 i 10 (junct {p2 ?p2, p3 ?p3, type arrow, p1 ?p1, base-point ?bp} nil nil))
(117 i 16 (edge {p2 ?p3, p1 ?bp, label PLUS} nil nil))
(118 i 4 (edge {p2 ?p2, p1 ?bp} nil nil))
(119 x 13 (edge {p2 ?p1, p1 ?bp, label NIL} nil nil) r-label-arrow-4B 0 [?fids] #<core$eval1444$fn__1445 rete.core$eval1444$fn__1445@f36dac0>)
(120 e 12 (stage {value labeling} nil nil) r-label-arrow-5A)
(121 i 10 (junct {p2 ?p2, p3 ?p3, type arrow, p1 ?p1, base-point ?bp} nil nil))
(122 i 18 (edge {p2 ?p2, p1 ?bp, label MINUS} nil nil))
(123 i 4 (edge {p2 ?p1, p1 ?bp} nil nil))
(124 x 13 (edge {p2 ?p3, p1 ?bp, label NIL} nil nil) r-label-arrow-5A 5 [?fids] #<core$eval1448$fn__1449 rete.core$eval1448$fn__1449@2cc9914e>)
(125 e 12 (stage {value labeling} nil nil) r-label-arrow-5B)
(126 i 10 (junct {p2 ?p2, p3 ?p3, type arrow, p1 ?p1, base-point ?bp} nil nil))
(127 i 18 (edge {p2 ?p2, p1 ?bp, label MINUS} nil nil))
(128 i 13 (edge {p2 ?p1, p1 ?bp, label NIL} nil nil))
(129 x 4 (edge {p2 ?p3, p1 ?bp} nil nil) r-label-arrow-5B 0 [?fids] #<core$eval1452$fn__1453 rete.core$eval1452$fn__1453@41d5a7f9>)
(130 ex 12 (stage {value labeling} nil nil) r-done-labeling -10 [?fids] #<core$eval1456$fn__1457 rete.core$eval1456$fn__1457@243cfd5a>)
(131 e 19 (stage {value plot-boundaries} nil nil) r-plot-boundaries)
(132 x 20 (edge {p2 ?p2, plotted NIL, p1 ?p1, label NIL} nil nil) r-plot-boundaries 5 [?fids] #<core$eval1460$fn__1461 rete.core$eval1460$fn__1461@7f85a7f0>)
(133 ex 19 (stage {value plot-boundaries} nil nil) r-done-plot-boundaries 0 [?fids] #<core$eval1464$fn__1465 rete.core$eval1464$fn__1465@2299e3c9>)
(134 e 21 (stage {value plot-remaining-edges} nil nil) r-plot-remaining-edges)
(135 x 22 (edge {plotted NIL} nil nil) r-plot-remaining-edges 5 [?fids] #<core$eval1468$fn__1469 rete.core$eval1468$fn__1469@2464a693>)
(136 ex 21 (stage {value plot-remaining-edges} nil nil) r-done-plotting 0 [?fids] #<core$eval1472$fn__1473 rete.core$eval1472$fn__1473@32109b42>)
