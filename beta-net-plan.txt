(0 e 0 ((Goal unlock :?chest :?) nil nil) "Put-chest-on-floor")
(1 i 1 ((Monkey :?chest :?place :?on) nil nil))
(2 x 2 ((Thing :? :?chest :? :?) nil nil) "Put-chest-on-floor" 0 (:?chest :?place :?on :?fids) #object[clojure.core$eval2295$fn__2296 0x79e40b95 "clojure.core$eval2295$fn__2296@79e40b95"])
(3 e 0 ((Goal unlock :?obj :?) nil nil) "Get-key-to-unlock")
(4 i 3 ((Thing :? :?obj floor :?) nil nil))
(5 i 4 ((Chest :? :?obj :?key) nil nil))
(6 i 1 ((Monkey :?thing :? :?) (:?thing :?key) #object[clojure.core$eval2299$fn__2300 0x7018bede "clojure.core$eval2299$fn__2300@7018bede"]))
(7 x 5 (not (Goal hold :?key :?) nil nil) "Get-key-to-unlock" 0 (:?key) #object[clojure.core$eval2303$fn__2304 0x5de51370 "clojure.core$eval2303$fn__2304@5de51370"])
(8 e 0 ((Goal unlock :?chest :?) nil nil) "Move-to-chest-with-key")
(9 i 1 ((Monkey :?key :?mplace :?) nil nil))
(10 i 3 ((Thing :?cplace :?chest floor :?) (:?cplace :?mplace) #object[clojure.core$eval2307$fn__2308 0x200d5039 "clojure.core$eval2307$fn__2308@200d5039"]))
(11 i 4 ((Chest :? :?chest :?key) nil nil))
(12 x 6 (not (Goal walk-to :?cplace :?) nil nil) "Move-to-chest-with-key" 0 (:?cplace) #object[clojure.core$eval2311$fn__2312 0x606099c2 "clojure.core$eval2311$fn__2312@606099c2"])
(13 e 0 ((Goal unlock :?name :?) nil nil) "Unlock-chest-with-key")
(14 i 4 ((Chest :?contents :?name :?key) nil nil))
(15 i 2 ((Thing :?place :?name :?on :?) nil nil))
(16 x 1 ((Monkey :?key :?place :?on) nil nil) "Unlock-chest-with-key" 0 (:?place :?fids :?contents :?name :?key) #object[clojure.core$eval2315$fn__2316 0x50ceddb3 "clojure.core$eval2315$fn__2316@50ceddb3"])
(17 e 5 ((Goal hold :?obj :?) nil nil) "Unlock-chest-to-hold-object")
(18 i 4 ((Chest :?obj :?chest :?) nil nil))
(19 x 0 (not (Goal unlock :?chest :?) nil nil) "Unlock-chest-to-hold-object" 0 (:?chest) #object[clojure.core$eval2319$fn__2320 0x42d55eb2 "clojure.core$eval2319$fn__2320@42d55eb2"])
(20 e 5 ((Goal hold :?obj :?) nil nil) "Use-ladder-to-hold")
(21 i 7 ((Thing :?place :?obj ceiling light) nil nil))
(22 i 8 (not (Thing :?place ladder :? :?) nil nil))
(23 x 9 (not (Goal move ladder :?place) nil nil) "Use-ladder-to-hold" 0 (:?place) #object[clojure.core$eval2323$fn__2324 0x11fe5987 "clojure.core$eval2323$fn__2324@11fe5987"])
(24 e 5 ((Goal hold :?obj :?) nil nil) "Climb-ladder-to-hold")
(25 i 7 ((Thing :?place :?obj ceiling light) nil nil))
(26 i 10 ((Thing :?place ladder floor :?) nil nil))
(27 i 1 ((Monkey :? :? :?s) (:?s) #object[clojure.core$eval2327$fn__2328 0x708394e "clojure.core$eval2327$fn__2328@708394e"]))
(28 x 11 (not (Goal on ladder :?) nil nil) "Climb-ladder-to-hold" 0 () #object[clojure.core$eval2331$fn__2332 0x26ad03f8 "clojure.core$eval2331$fn__2332@26ad03f8"])
(29 e 5 ((Goal hold :?name :?) nil nil) "Grab-object-from-ladder")
(30 i 7 ((Thing :?place :?name ceiling light) nil nil))
(31 i 8 ((Thing :?place ladder :? :?) nil nil))
(32 x 12 ((Monkey blank :?place ladder) nil nil) "Grab-object-from-ladder" 0 (:?fids :?name) #object[clojure.core$eval2335$fn__2336 0x2f067980 "clojure.core$eval2335$fn__2336@2f067980"])
(33 e 5 ((Goal hold :?obj :?) nil nil) "Climb-to-hold")
(34 i 13 ((Thing :?place :?obj :?on light) (:?on) #object[clojure.core$eval2339$fn__2340 0x58a99e4f "clojure.core$eval2339$fn__2340@58a99e4f"]))
(35 i 1 ((Monkey :? :?place :?surf) (:?on :?surf) #object[clojure.core$eval2343$fn__2344 0x4db8280c "clojure.core$eval2343$fn__2344@4db8280c"]))
(36 x 14 (not (Goal on :?on :?) nil nil) "Climb-to-hold" 0 (:?on) #object[clojure.core$eval2347$fn__2348 0x2990672d "clojure.core$eval2347$fn__2348@2990672d"])
(37 e 5 ((Goal hold :?obj :?) nil nil) "Walk-to-hold")
(38 i 13 ((Thing :?place :?obj :?surf light) (:?surf) #object[clojure.core$eval2351$fn__2352 0x2c18ab0d "clojure.core$eval2351$fn__2352@2c18ab0d"]))
(39 i 1 ((Monkey :? :?loc :?) (:?place :?loc) #object[clojure.core$eval2355$fn__2356 0x172e5942 "clojure.core$eval2355$fn__2356@172e5942"]))
(40 x 6 (not (Goal walk-to :?place :?) nil nil) "Walk-to-hold" 0 (:?place) #object[clojure.core$eval2359$fn__2360 0x606c72a5 "clojure.core$eval2359$fn__2360@606c72a5"])
(41 e 5 ((Goal hold :?obj :?) nil nil) "Drop-to-hold")
(42 i 13 ((Thing :?place :?obj :?on light) nil nil))
(43 i 1 ((Monkey :?hold :?place :?on) (:?hold) #object[clojure.core$eval2363$fn__2364 0xdd70fc0 "clojure.core$eval2363$fn__2364@dd70fc0"]))
(44 x 15 (not (Goal hold blank :?) nil nil) "Drop-to-hold" 0 () #object[clojure.core$eval2367$fn__2368 0x3c026353 "clojure.core$eval2367$fn__2368@3c026353"])
(45 e 5 ((Goal hold :?name :?) nil nil) "Grab-object")
(46 i 13 ((Thing :?place :?name :?on light) nil nil))
(47 x 16 ((Monkey blank :?place :?on) nil nil) "Grab-object" 0 (:?fids :?name) #object[clojure.core$eval2371$fn__2372 0x32166f45 "clojure.core$eval2371$fn__2372@32166f45"])
(48 e 15 ((Goal hold blank :?) nil nil) "Drop-object")
(49 i 1 ((Monkey :?name :?place :?on) (:?name) #object[clojure.core$eval2375$fn__2376 0x1bff16b5 "clojure.core$eval2375$fn__2376@1bff16b5"]))
(50 x 2 ((Thing :? :?name :? :?) nil nil) "Drop-object" 0 (:?place :?on :?fids :?name) #object[clojure.core$eval2379$fn__2380 0x59e206a3 "clojure.core$eval2379$fn__2380@59e206a3"])
(51 e 17 ((Goal move :?obj :?place) nil nil) "Unlock-chest-to-move-object")
(52 i 4 ((Chest :?obj :?chest :?) nil nil))
(53 x 0 (not (Goal unlock :?chest :?) nil nil) "Unlock-chest-to-move-object" 0 (:?chest) #object[clojure.core$eval2383$fn__2384 0x5d22b3d1 "clojure.core$eval2383$fn__2384@5d22b3d1"])
(54 e 17 ((Goal move :?obj :?place) nil nil) "Hold-object-to-move")
(55 i 13 ((Thing :?loc :?obj :? light) (:?place :?loc) #object[clojure.core$eval2387$fn__2388 0x7ed22620 "clojure.core$eval2387$fn__2388@7ed22620"]))
(56 i 1 ((Monkey :?hold :? :?) (:?obj :?hold) #object[clojure.core$eval2391$fn__2392 0x591f689f "clojure.core$eval2391$fn__2392@591f689f"]))
(57 x 5 (not (Goal hold :?obj :?) nil nil) "Hold-object-to-move" 0 (:?obj) #object[clojure.core$eval2395$fn__2396 0x249296ab "clojure.core$eval2395$fn__2396@249296ab"])
(58 e 17 ((Goal move :?obj :?place) nil nil) "Move-object-to-place")
(59 i 1 ((Monkey :?obj :?loc :?) (:?place :?loc) #object[clojure.core$eval2399$fn__2400 0x8b6fa72 "clojure.core$eval2399$fn__2400@8b6fa72"]))
(60 x 6 (not (Goal walk-to :?place :?) nil nil) "Move-object-to-place" 0 (:?place) #object[clojure.core$eval2403$fn__2404 0x4a63f6e3 "clojure.core$eval2403$fn__2404@4a63f6e3"])
(61 e 17 ((Goal move :?name :?place) nil nil) "Drop-object-once-moved")
(62 i 1 ((Monkey :?obj :?place :?) nil nil))
(63 x 13 ((Thing :? :?name :? light) nil nil) "Drop-object-once-moved" 0 (:?place :?fids :?name) #object[clojure.core$eval2407$fn__2408 0x1c844777 "clojure.core$eval2407$fn__2408@1c844777"])
(64 e 17 ((Goal move :?obj :?place) nil nil) "Already-moved-object")
(65 x 2 ((Thing :?place :?obj :? :?) nil nil) "Already-moved-object" 0 (:?fids) #object[clojure.core$eval2411$fn__2412 0xbfcd369 "clojure.core$eval2411$fn__2412@bfcd369"])
(66 e 6 ((Goal walk-to :?place :?) nil nil) "Already-at-place")
(67 x 1 ((Monkey :? :?place :?) nil nil) "Already-at-place" 0 (:?fids) #object[clojure.core$eval2415$fn__2416 0x6e0becda "clojure.core$eval2415$fn__2416@6e0becda"])
(68 e 6 ((Goal walk-to :?place :?) nil nil) "Get-on-floor-to-walk")
(69 i 1 ((Monkey :? :?loc :?surf) (:?place :?loc :?surf) #object[clojure.core$eval2419$fn__2420 0xd56f5d3 "clojure.core$eval2419$fn__2420@d56f5d3"]))
(70 x 18 (not (Goal on floor :?) nil nil) "Get-on-floor-to-walk" 0 () #object[clojure.core$eval2424$fn__2425 0x31713df0 "clojure.core$eval2424$fn__2425@31713df0"])
(71 e 6 ((Goal walk-to :?place :?) nil nil) "Walk-holding-nothing")
(72 x 19 ((Monkey blank :?loc floor) (:?place :?loc) #object[clojure.core$eval2428$fn__2429 0xea14be9 "clojure.core$eval2428$fn__2429@ea14be9"]) "Walk-holding-nothing" 0 (:?place :?fids) #object[clojure.core$eval2432$fn__2433 0x57b5a8b "clojure.core$eval2432$fn__2433@57b5a8b"])
(73 e 6 ((Goal walk-to :?place :?) nil nil) "Walk-holding-object")
(74 x 20 ((Monkey :?obj :?loc floor) (:?place :?obj :?loc) #object[clojure.core$eval2436$fn__2437 0x66aabb09 "clojure.core$eval2436$fn__2437@66aabb09"]) "Walk-holding-object" 0 (:?place :?obj :?fids) #object[clojure.core$eval2441$fn__2442 0x7dd2cce0 "clojure.core$eval2441$fn__2442@7dd2cce0"])
(75 e 18 ((Goal on floor :?) nil nil) "Jump-onto-floor")
(76 x 1 ((Monkey :? :? :?on) (:?on) #object[clojure.core$eval2445$fn__2446 0x765c1767 "clojure.core$eval2445$fn__2446@765c1767"]) "Jump-onto-floor" 0 (:?on :?fids) #object[clojure.core$eval2449$fn__2450 0x34249417 "clojure.core$eval2449$fn__2450@34249417"])
(77 e 14 ((Goal on :?obj :?) nil nil) "Walk-to-place-to-climb")
(78 i 2 ((Thing :?place :?obj :? :?) nil nil))
(79 i 1 ((Monkey :? :?loc :?) (:?place :?loc) #object[clojure.core$eval2453$fn__2454 0x61c7f772 "clojure.core$eval2453$fn__2454@61c7f772"]))
(80 x 6 (not (Goal walk-to :?place :?) nil nil) "Walk-to-place-to-climb" 0 (:?place) #object[clojure.core$eval2457$fn__2458 0x401c062a "clojure.core$eval2457$fn__2458@401c062a"])
(81 e 14 ((Goal on :?obj :?) nil nil) "Drop-to-climb")
(82 i 2 ((Thing :?place :?obj :? :?) nil nil))
(83 i 1 ((Monkey :?hold :?place :?) (:?hold) #object[clojure.core$eval2461$fn__2462 0x225de6ea "clojure.core$eval2461$fn__2462@225de6ea"]))
(84 x 15 (not (Goal hold blank :?) nil nil) "Drop-to-climb" 0 () #object[clojure.core$eval2465$fn__2466 0x70c3fc3b "clojure.core$eval2465$fn__2466@70c3fc3b"])
(85 e 14 ((Goal on :?obj :?) nil nil) "Climb-indirectly")
(86 i 2 ((Thing :?place :?obj :?on :?) nil nil))
(87 i 16 ((Monkey blank :?place :?on2) (:?on2 :?on :?obj) #object[clojure.core$eval2469$fn__2470 0x75d9d7a "clojure.core$eval2469$fn__2470@75d9d7a"]))
(88 x 14 (not (Goal on :?on :?) nil nil) "Climb-indirectly" 0 (:?on) #object[clojure.core$eval2474$fn__2475 0xe807869 "clojure.core$eval2474$fn__2475@e807869"])
(89 e 14 ((Goal on :?obj :?) nil nil) "Climb-directly")
(90 i 2 ((Thing :?place :?obj :?on :?) nil nil))
(91 x 16 ((Monkey blank :?place :?on) nil nil) "Climb-directly" 0 (:?obj :?fids) #object[clojure.core$eval2478$fn__2479 0x294e0442 "clojure.core$eval2478$fn__2479@294e0442"])
(92 e 14 ((Goal on :?obj :?) nil nil) "Already-on-object")
(93 x 1 ((Monkey :? :? :?obj) nil nil) "Already-on-object" 0 (:?fids) #object[clojure.core$eval2482$fn__2483 0x5825912f "clojure.core$eval2482$fn__2483@5825912f"])
(94 e 21 ((Goal eat :?obj :?) nil nil) "Hold-to-eat")
(95 i 1 ((Monkey :?h :? :?) (:?h :?obj) #object[clojure.core$eval2486$fn__2487 0xbf80f38 "clojure.core$eval2486$fn__2487@bf80f38"]))
(96 x 5 (not (Goal hold :?obj :?) nil nil) "Hold-to-eat" 0 (:?obj) #object[clojure.core$eval2490$fn__2491 0x403aefd8 "clojure.core$eval2490$fn__2491@403aefd8"])
(97 e 21 ((Goal eat :?name :?) nil nil) "Satisfy-hunger")
(98 i 1 ((Monkey :?name :? :?) nil nil))
(99 x 2 ((Thing :? :?name :? :?) nil nil) "Satisfy-hunger" 0 (:?fids :?name) #object[clojure.core$eval2494$fn__2495 0x9752865 "clojure.core$eval2494$fn__2495@9752865"])
