(0 e 14 (goal-is-to {argument1 ?chest, action unlock} nil nil) hold-chest-to-put-on-floor)
(1 i 54 (thing {on-top-of ?surf, weight light, name ?chest} [?surf] #<core$eval1445$fn__1446 rete.core$eval1445$fn__1446@48c724c>))
(2 x 84 (monkey {holding ?thing} [?chest ?thing] #<core$eval1449$fn__1450 rete.core$eval1449$fn__1450@42ed1bf6>) hold-chest-to-put-on-floor 0 [?chest] #<core$eval1454$fn__1455 rete.core$eval1454$fn__1455@1c313f4e>)
(3 e 14 (goal-is-to {argument1 ?chest, action unlock} nil nil) put-chest-on-floor)
(4 i 84 (monkey {on-top-of ?on, holding ?chest, location ?place} nil nil))
(5 x 85 (thing {name ?chest} nil nil) put-chest-on-floor 0 [?chest ?place ?on ?fids] #<core$eval1458$fn__1459 rete.core$eval1458$fn__1459@7edfb412>)
(6 e 14 (goal-is-to {argument1 ?obj, action unlock} nil nil) get-key-to-unlock)
(7 i 12 (thing {on-top-of floor, name ?obj} nil nil))
(8 i 46 (chest {name ?obj, unlocked-by ?key} nil nil))
(9 x 84 (monkey {holding ?thing} [?key ?thing] #<core$eval1462$fn__1463 rete.core$eval1462$fn__1463@25703b9b>) get-key-to-unlock 0 [?key] #<core$eval1467$fn__1468 rete.core$eval1467$fn__1468@36b4fec5>)
(10 e 14 (goal-is-to {argument1 ?chest, action unlock} nil nil) move-to-chest-with-key)
(11 i 84 (monkey {holding ?key, location ?mplace} nil nil))
(12 i 12 (thing {on-top-of floor, name ?chest, location ?cplace} [?cplace ?mplace] #<core$eval1471$fn__1472 rete.core$eval1471$fn__1472@5de633b7>))
(13 x 46 (chest {name ?chest, unlocked-by ?key} [?cplace] #<core$eval1475$fn__1476 rete.core$eval1475$fn__1476@c200ff6>) move-to-chest-with-key 0 [?cplace] #<core$eval1479$fn__1480 rete.core$eval1479$fn__1480@364df423>)
(14 e 14 (goal-is-to {argument1 ?name, action unlock} nil nil) unlock-chest-with-key)
(15 i 46 (chest {contents ?contents, name ?name, unlocked-by ?key} nil nil))
(16 i 85 (thing {on-top-of ?on, name ?name, location ?place} nil nil))
(17 x 84 (monkey {on-top-of ?on, holding ?key, location ?place} nil nil) unlock-chest-with-key 0 [?name ?key ?place ?contents ?fids] #<core$eval1483$fn__1484 rete.core$eval1483$fn__1484@1f29fb51>)
(18 e 39 (goal-is-to {argument1 ?obj, action hold} nil nil) unlock-chest-to-hold-object)
(19 x 46 (chest {contents ?obj, name ?chest} [?chest] #<core$eval1487$fn__1488 rete.core$eval1487$fn__1488@140ee2ab>) unlock-chest-to-hold-object 0 [?chest] #<core$eval1491$fn__1492 rete.core$eval1491$fn__1492@7ccf5ac5>)
(20 e 39 (goal-is-to {argument1 ?obj, action hold} nil nil) use-ladder-to-hold)
(21 x 27 (thing {on-top-of ceiling, weight light, name ?obj, location ?place} [?place] #<core$eval1495$fn__1496 rete.core$eval1495$fn__1496@1e89a8d9>) use-ladder-to-hold 0 [?place] #<core$eval1500$fn__1501 rete.core$eval1500$fn__1501@2b5cccf1>)
(22 e 39 (goal-is-to {argument1 ?obj, action hold} nil nil) climb-ladder-to-hold)
(23 i 27 (thing {on-top-of ceiling, weight light, name ?obj, location ?place} nil nil))
(24 i 24 (thing {on-top-of floor, name ladder, location ?place} nil nil))
(25 x 84 (monkey {on-top-of ?s} [?s] #<core$eval1504$fn__1505 rete.core$eval1504$fn__1505@3db9b677>) climb-ladder-to-hold 0 [] #<core$eval1509$fn__1510 rete.core$eval1509$fn__1510@7780fc02>)
(26 e 39 (goal-is-to {argument1 ?name, action hold} nil nil) grab-object-from-ladder)
(27 i 27 (thing {on-top-of ceiling, weight light, name ?name, location ?place} nil nil))
(28 i 28 (thing {name ladder, location ?place} nil nil))
(29 x 29 (monkey {on-top-of ladder, holding blank, location ?place} nil nil) grab-object-from-ladder 0 [?name ?fids] #<core$eval1513$fn__1514 rete.core$eval1513$fn__1514@3049aad2>)
(30 e 39 (goal-is-to {argument1 ?obj, action hold} nil nil) climb-to-hold)
(31 i 54 (thing {on-top-of ?on, weight light, name ?obj, location ?place} [?on] #<core$eval1517$fn__1518 rete.core$eval1517$fn__1518@7abac4b1>))
(32 x 84 (monkey {on-top-of ?surf, location ?place} [?on ?surf] #<core$eval1521$fn__1522 rete.core$eval1521$fn__1522@58b0cea2>) climb-to-hold 0 [?on] #<core$eval1526$fn__1527 rete.core$eval1526$fn__1527@99a3769>)
(33 e 39 (goal-is-to {argument1 ?obj, action hold} nil nil) walk-to-hold)
(34 i 54 (thing {on-top-of ?surf, weight light, name ?obj, location ?place} [?surf] #<core$eval1530$fn__1531 rete.core$eval1530$fn__1531@5067770f>))
(35 x 84 (monkey {location ?loc} [?loc ?place] #<core$eval1534$fn__1535 rete.core$eval1534$fn__1535@42d61877>) walk-to-hold 0 [?place] #<core$eval1539$fn__1540 rete.core$eval1539$fn__1540@4880f07f>)
(36 e 39 (goal-is-to {argument1 ?obj, action hold} nil nil) drop-to-hold)
(37 i 54 (thing {on-top-of ?on, weight light, name ?obj, location ?place} nil nil))
(38 x 84 (monkey {on-top-of ?on, holding ?hold, location ?place} [?hold] #<core$eval1543$fn__1544 rete.core$eval1543$fn__1544@7e30c28>) drop-to-hold 0 [] #<core$eval1548$fn__1549 rete.core$eval1548$fn__1549@347d46d4>)
(39 e 39 (goal-is-to {argument1 ?name, action hold} nil nil) grab-object)
(40 i 54 (thing {on-top-of ?on, weight light, name ?name, location ?place} nil nil))
(41 x 78 (monkey {on-top-of ?on, holding blank, location ?place} nil nil) grab-object 0 [?name ?fids] #<core$eval1552$fn__1553 rete.core$eval1552$fn__1553@321f8d38>)
(42 e 42 (goal-is-to {argument1 blank, action hold} nil nil) drop-object)
(43 i 84 (monkey {on-top-of ?on, holding ?name, location ?place} [?name] #<core$eval1556$fn__1557 rete.core$eval1556$fn__1557@1c63f8ce>))
(44 x 85 (thing {name ?name} nil nil) drop-object 0 [?name ?place ?on ?fids] #<core$eval1560$fn__1561 rete.core$eval1560$fn__1561@45fd24c1>)
(45 e 55 (goal-is-to {argument1 ?obj, argument2 ?place, action move} nil nil) unlock-chest-to-move-object)
(46 x 46 (chest {contents ?obj, name ?chest} [?chest] #<core$eval1564$fn__1565 rete.core$eval1564$fn__1565@108dad9c>) unlock-chest-to-move-object 0 [?chest] #<core$eval1568$fn__1569 rete.core$eval1568$fn__1569@40f4dd2b>)
(47 e 55 (goal-is-to {argument1 ?obj, argument2 ?place, action move} nil nil) hold-object-to-move)
(48 i 54 (thing {weight light, name ?obj, location ?loc} [?loc ?place] #<core$eval1572$fn__1573 rete.core$eval1572$fn__1573@449b369>))
(49 x 84 (monkey {holding ?hold} [?hold ?obj] #<core$eval1576$fn__1577 rete.core$eval1576$fn__1577@2b8515bf>) hold-object-to-move 0 [?obj] #<core$eval1581$fn__1582 rete.core$eval1581$fn__1582@5a08f27c>)
(50 e 55 (goal-is-to {argument1 ?obj, argument2 ?place, action move} nil nil) move-object-to-place)
(51 x 84 (monkey {holding ?obj, location ?loc} [?loc ?place] #<core$eval1585$fn__1586 rete.core$eval1585$fn__1586@700478b5>) move-object-to-place 0 [?place] #<core$eval1590$fn__1591 rete.core$eval1590$fn__1591@59d69ffc>)
(52 e 55 (goal-is-to {argument1 ?name, argument2 ?place, action move} nil nil) drop-object-once-moved)
(53 i 84 (monkey {holding ?obj, location ?place} nil nil))
(54 x 54 (thing {weight light, name ?name} nil nil) drop-object-once-moved 0 [?name ?place ?fids] #<core$eval1594$fn__1595 rete.core$eval1594$fn__1595@5bc0ece2>)
(55 e 55 (goal-is-to {argument1 ?obj, argument2 ?place, action move} nil nil) already-moved-object)
(56 x 85 (thing {name ?obj, location ?place} nil nil) already-moved-object 0 [?fids] #<core$eval1598$fn__1599 rete.core$eval1598$fn__1599@5ee841b8>)
(57 e 63 (goal-is-to {argument1 ?place, action walk-to} nil nil) already-at-place)
(58 x 84 (monkey {location ?place} nil nil) already-at-place 0 [?fids] #<core$eval1602$fn__1603 rete.core$eval1602$fn__1603@57a8551>)
(59 e 63 (goal-is-to {argument1 ?place, action walk-to} nil nil) get-on-floor-to-walk)
(60 x 84 (monkey {on-top-of ?surf, location ?loc} [?loc ?place ?surf] #<core$eval1606$fn__1607 rete.core$eval1606$fn__1607@4db2abe7>) get-on-floor-to-walk 0 [] #<core$eval1612$fn__1613 rete.core$eval1612$fn__1613@52cd564c>)
(61 e 63 (goal-is-to {argument1 ?place, action walk-to} nil nil) walk-holding-nothing)
(62 x 62 (monkey {on-top-of floor, holding blank, location ?loc} [?loc ?place] #<core$eval1616$fn__1617 rete.core$eval1616$fn__1617@51f66b36>) walk-holding-nothing 0 [?place ?fids] #<core$eval1620$fn__1621 rete.core$eval1620$fn__1621@511c413d>)
(63 e 63 (goal-is-to {argument1 ?place, action walk-to} nil nil) walk-holding-object)
(64 x 64 (monkey {on-top-of floor, holding ?obj, location ?loc} [?loc ?place ?obj] #<core$eval1624$fn__1625 rete.core$eval1624$fn__1625@109957ab>) walk-holding-object 0 [?place ?obj ?fids] #<core$eval1629$fn__1630 rete.core$eval1629$fn__1630@198ddef7>)
(65 e 65 (goal-is-to {argument1 floor, action on} nil nil) jump-onto-floor)
(66 x 84 (monkey {on-top-of ?on} [?on] #<core$eval1633$fn__1634 rete.core$eval1633$fn__1634@55e5f3af>) jump-onto-floor 0 [?on ?fids] #<core$eval1637$fn__1638 rete.core$eval1637$fn__1638@335ee1b3>)
(67 e 79 (goal-is-to {argument1 ?obj, action on} nil nil) walk-to-place-to-climb)
(68 i 85 (thing {name ?obj, location ?place} nil nil))
(69 x 84 (monkey {location ?loc} [?loc ?place] #<core$eval1641$fn__1642 rete.core$eval1641$fn__1642@40541d79>) walk-to-place-to-climb 0 [?place] #<core$eval1646$fn__1647 rete.core$eval1646$fn__1647@6d82e645>)
(70 e 79 (goal-is-to {argument1 ?obj, action on} nil nil) drop-to-climb)
(71 i 85 (thing {name ?obj, location ?place} nil nil))
(72 x 84 (monkey {holding ?hold, location ?place} [?hold] #<core$eval1650$fn__1651 rete.core$eval1650$fn__1651@2d09c79b>) drop-to-climb 0 [] #<core$eval1655$fn__1656 rete.core$eval1655$fn__1656@6fea3dd0>)
(73 e 79 (goal-is-to {argument1 ?obj, action on} nil nil) climb-indirectly)
(74 i 85 (thing {on-top-of ?on, name ?obj, location ?place} nil nil))
(75 x 78 (monkey {on-top-of ?on2, holding blank, location ?place} [?on2 ?on ?obj] #<core$eval1659$fn__1660 rete.core$eval1659$fn__1660@718316f2>) climb-indirectly 0 [?on] #<core$eval1665$fn__1666 rete.core$eval1665$fn__1666@31c98853>)
(76 e 79 (goal-is-to {argument1 ?obj, action on} nil nil) climb-directly)
(77 i 85 (thing {on-top-of ?on, name ?obj, location ?place} nil nil))
(78 x 78 (monkey {on-top-of ?on, holding blank, location ?place} nil nil) climb-directly 0 [?obj ?fids] #<core$eval1669$fn__1670 rete.core$eval1669$fn__1670@38747597>)
(79 e 79 (goal-is-to {argument1 ?obj, action on} nil nil) already-on-object)
(80 x 84 (monkey {on-top-of ?obj} nil nil) already-on-object 0 [?fids] #<core$eval1673$fn__1674 rete.core$eval1673$fn__1674@1417e278>)
(81 e 83 (goal-is-to {argument1 ?obj, action eat} nil nil) hold-to-eat)
(82 x 84 (monkey {holding ?h} [?h ?obj] #<core$eval1677$fn__1678 rete.core$eval1677$fn__1678@5819ba07>) hold-to-eat 0 [?obj] #<core$eval1682$fn__1683 rete.core$eval1682$fn__1683@b1e02d2>)
(83 e 83 (goal-is-to {argument1 ?name, action eat} nil nil) satisfy-hunger)
(84 i 84 (monkey {holding ?name} nil nil))
(85 x 85 (thing {name ?name} nil nil) satisfy-hunger 0 [?name ?fids] #<core$eval1686$fn__1687 rete.core$eval1686$fn__1687@46fe469c>)
