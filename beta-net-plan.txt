(0 e 0 ((Goal unlock :?chest :?) nil nil) "Hold-chest-to-put-on-floor")
(1 i 1 ((Thing :? :?chest :?surf light) (:?surf) #object[clojure.core$eval1777$fn__1778 0x13acc3d0 "clojure.core$eval1777$fn__1778@13acc3d0"]))
(2 i 2 ((Monkey :?thing :? :?) (:?chest :?thing) #object[clojure.core$eval1781$fn__1782 0x39f51311 "clojure.core$eval1781$fn__1782@39f51311"]))
(3 x 3 (not (Goal hold :?chest :?) nil nil) "Hold-chest-to-put-on-floor" 0 (:?chest) #object[clojure.core$eval1785$fn__1786 0x6ba7de45 "clojure.core$eval1785$fn__1786@6ba7de45"])
(4 e 0 ((Goal unlock :?chest :?) nil nil) "Put-chest-on-floor")
(5 i 2 ((Monkey :?chest :?place :?on) nil nil))
(6 x 4 ((Thing :? :?chest :? :?) nil nil) "Put-chest-on-floor" 0 (:?chest :?place :?on :?fids) #object[clojure.core$eval1789$fn__1790 0x23ff8c30 "clojure.core$eval1789$fn__1790@23ff8c30"])
(7 e 0 ((Goal unlock :?obj :?) nil nil) "Get-key-to-unlock")
(8 i 5 ((Thing :? :?obj floor :?) nil nil))
(9 i 6 ((Chest :? :?obj :?key) nil nil))
(10 i 2 ((Monkey :?thing :? :?) (:?thing :?key) #object[clojure.core$eval1793$fn__1794 0x69e0d006 "clojure.core$eval1793$fn__1794@69e0d006"]))
(11 x 3 (not (Goal hold :?key :?) nil nil) "Get-key-to-unlock" 0 (:?key) #object[clojure.core$eval1797$fn__1798 0x1fec0fd5 "clojure.core$eval1797$fn__1798@1fec0fd5"])
(12 e 0 ((Goal unlock :?chest :?) nil nil) "Move-to-chest-with-key")
(13 i 2 ((Monkey :?key :?mplace :?) nil nil))
(14 i 5 ((Thing :?cplace :?chest floor :?) (:?cplace :?mplace) #object[clojure.core$eval1801$fn__1802 0x4f9df549 "clojure.core$eval1801$fn__1802@4f9df549"]))
(15 i 6 ((Chest :? :?chest :?key) nil nil))
(16 x 7 (not (Goal walk-to :?cplace :?) nil nil) "Move-to-chest-with-key" 0 (:?cplace) #object[clojure.core$eval1805$fn__1806 0x1c5e3227 "clojure.core$eval1805$fn__1806@1c5e3227"])
(17 e 0 ((Goal unlock :?name :?) nil nil) "Unlock-chest-with-key")
(18 i 6 ((Chest :?contents :?name :?key) nil nil))
(19 i 4 ((Thing :?place :?name :?on :?) nil nil))
(20 x 2 ((Monkey :?key :?place :?on) nil nil) "Unlock-chest-with-key" 0 (:?place :?fids :?contents :?name :?key) #object[clojure.core$eval1809$fn__1810 0xf652802 "clojure.core$eval1809$fn__1810@f652802"])
(21 e 3 ((Goal hold :?obj :?) nil nil) "Unlock-chest-to-hold-object")
(22 i 6 ((Chest :?obj :?chest :?) nil nil))
(23 x 0 (not (Goal unlock :?chest :?) nil nil) "Unlock-chest-to-hold-object" 0 (:?chest) #object[clojure.core$eval1813$fn__1814 0x19560b7d "clojure.core$eval1813$fn__1814@19560b7d"])
(24 e 3 ((Goal hold :?obj :?) nil nil) "Use-ladder-to-hold")
(25 i 8 ((Thing :?place :?obj ceiling light) nil nil))
(26 i 9 (not (Thing :?place ladder :? :?) nil nil))
(27 x 10 (not (Goal move ladder :?place) nil nil) "Use-ladder-to-hold" 0 (:?place) #object[clojure.core$eval1817$fn__1818 0x525ac76 "clojure.core$eval1817$fn__1818@525ac76"])
(28 e 3 ((Goal hold :?obj :?) nil nil) "Climb-ladder-to-hold")
(29 i 8 ((Thing :?place :?obj ceiling light) nil nil))
(30 i 11 ((Thing :?place ladder floor :?) nil nil))
(31 i 2 ((Monkey :? :? :?s) (:?s) #object[clojure.core$eval1821$fn__1822 0x7ea11a52 "clojure.core$eval1821$fn__1822@7ea11a52"]))
(32 x 12 (not (Goal on ladder :?) nil nil) "Climb-ladder-to-hold" 0 () #object[clojure.core$eval1825$fn__1826 0x40d6b8a6 "clojure.core$eval1825$fn__1826@40d6b8a6"])
(33 e 3 ((Goal hold :?name :?) nil nil) "Grab-object-from-ladder")
(34 i 8 ((Thing :?place :?name ceiling light) nil nil))
(35 i 9 ((Thing :?place ladder :? :?) nil nil))
(36 x 13 ((Monkey blank :?place ladder) nil nil) "Grab-object-from-ladder" 0 (:?fids :?name) #object[clojure.core$eval1829$fn__1830 0x4e5fa44d "clojure.core$eval1829$fn__1830@4e5fa44d"])
(37 e 3 ((Goal hold :?obj :?) nil nil) "Climb-to-hold")
(38 i 1 ((Thing :?place :?obj :?on light) (:?on) #object[clojure.core$eval1833$fn__1834 0x14d0db62 "clojure.core$eval1833$fn__1834@14d0db62"]))
(39 i 2 ((Monkey :? :?place :?surf) (:?on :?surf) #object[clojure.core$eval1837$fn__1838 0x4dfad30b "clojure.core$eval1837$fn__1838@4dfad30b"]))
(40 x 14 (not (Goal on :?on :?) nil nil) "Climb-to-hold" 0 (:?on) #object[clojure.core$eval1841$fn__1842 0xce5c0b4 "clojure.core$eval1841$fn__1842@ce5c0b4"])
(41 e 3 ((Goal hold :?obj :?) nil nil) "Walk-to-hold")
(42 i 1 ((Thing :?place :?obj :?surf light) (:?surf) #object[clojure.core$eval1845$fn__1846 0x4a1f61c5 "clojure.core$eval1845$fn__1846@4a1f61c5"]))
(43 i 2 ((Monkey :? :?loc :?) (:?place :?loc) #object[clojure.core$eval1849$fn__1850 0x16418f93 "clojure.core$eval1849$fn__1850@16418f93"]))
(44 x 7 (not (Goal walk-to :?place :?) nil nil) "Walk-to-hold" 0 (:?place) #object[clojure.core$eval1853$fn__1854 0x4271e40e "clojure.core$eval1853$fn__1854@4271e40e"])
(45 e 3 ((Goal hold :?obj :?) nil nil) "Drop-to-hold")
(46 i 1 ((Thing :?place :?obj :?on light) nil nil))
(47 i 2 ((Monkey :?hold :?place :?on) (:?hold) #object[clojure.core$eval1857$fn__1858 0x74373760 "clojure.core$eval1857$fn__1858@74373760"]))
(48 x 15 (not (Goal hold blank :?) nil nil) "Drop-to-hold" 0 () #object[clojure.core$eval1861$fn__1862 0x4793d927 "clojure.core$eval1861$fn__1862@4793d927"])
(49 e 3 ((Goal hold :?name :?) nil nil) "Grab-object")
(50 i 1 ((Thing :?place :?name :?on light) nil nil))
(51 x 16 ((Monkey blank :?place :?on) nil nil) "Grab-object" 0 (:?fids :?name) #object[clojure.core$eval1865$fn__1866 0x642d4e29 "clojure.core$eval1865$fn__1866@642d4e29"])
(52 e 15 ((Goal hold blank :?) nil nil) "Drop-object")
(53 i 2 ((Monkey :?name :?place :?on) (:?name) #object[clojure.core$eval1869$fn__1870 0x4f3c66ac "clojure.core$eval1869$fn__1870@4f3c66ac"]))
(54 x 4 ((Thing :? :?name :? :?) nil nil) "Drop-object" 0 (:?place :?on :?fids :?name) #object[clojure.core$eval1873$fn__1874 0xf4eb36c "clojure.core$eval1873$fn__1874@f4eb36c"])
(55 e 17 ((Goal move :?obj :?place) nil nil) "Unlock-chest-to-move-object")
(56 i 6 ((Chest :?obj :?chest :?) nil nil))
(57 x 0 (not (Goal unlock :?chest :?) nil nil) "Unlock-chest-to-move-object" 0 (:?chest) #object[clojure.core$eval1877$fn__1878 0x4bc1d459 "clojure.core$eval1877$fn__1878@4bc1d459"])
(58 e 17 ((Goal move :?obj :?place) nil nil) "Hold-object-to-move")
(59 i 1 ((Thing :?loc :?obj :? light) (:?place :?loc) #object[clojure.core$eval1881$fn__1882 0x575ff029 "clojure.core$eval1881$fn__1882@575ff029"]))
(60 i 2 ((Monkey :?hold :? :?) (:?obj :?hold) #object[clojure.core$eval1885$fn__1886 0x53e4f4ff "clojure.core$eval1885$fn__1886@53e4f4ff"]))
(61 x 3 (not (Goal hold :?obj :?) nil nil) "Hold-object-to-move" 0 (:?obj) #object[clojure.core$eval1889$fn__1890 0x51d1ddbd "clojure.core$eval1889$fn__1890@51d1ddbd"])
(62 e 17 ((Goal move :?obj :?place) nil nil) "Move-object-to-place")
(63 i 2 ((Monkey :?obj :?loc :?) (:?place :?loc) #object[clojure.core$eval1893$fn__1894 0x276d8264 "clojure.core$eval1893$fn__1894@276d8264"]))
(64 x 7 (not (Goal walk-to :?place :?) nil nil) "Move-object-to-place" 0 (:?place) #object[clojure.core$eval1897$fn__1898 0x3ccd7098 "clojure.core$eval1897$fn__1898@3ccd7098"])
(65 e 17 ((Goal move :?name :?place) nil nil) "Drop-object-once-moved")
(66 i 2 ((Monkey :?obj :?place :?) nil nil))
(67 x 1 ((Thing :? :?name :? light) nil nil) "Drop-object-once-moved" 0 (:?place :?fids :?name) #object[clojure.core$eval1901$fn__1902 0x72987ea9 "clojure.core$eval1901$fn__1902@72987ea9"])
(68 e 17 ((Goal move :?obj :?place) nil nil) "Already-moved-object")
(69 x 4 ((Thing :?place :?obj :? :?) nil nil) "Already-moved-object" 0 (:?fids) #object[clojure.core$eval1905$fn__1906 0x35135dab "clojure.core$eval1905$fn__1906@35135dab"])
(70 e 7 ((Goal walk-to :?place :?) nil nil) "Already-at-place")
(71 x 2 ((Monkey :? :?place :?) nil nil) "Already-at-place" 0 (:?fids) #object[clojure.core$eval1909$fn__1910 0x509c7e91 "clojure.core$eval1909$fn__1910@509c7e91"])
(72 e 7 ((Goal walk-to :?place :?) nil nil) "Get-on-floor-to-walk")
(73 i 2 ((Monkey :? :?loc :?surf) (:?place :?loc :?surf) #object[clojure.core$eval1913$fn__1914 0x7089772d "clojure.core$eval1913$fn__1914@7089772d"]))
(74 x 18 (not (Goal on floor :?) nil nil) "Get-on-floor-to-walk" 0 () #object[clojure.core$eval1918$fn__1919 0x23bbf5f8 "clojure.core$eval1918$fn__1919@23bbf5f8"])
(75 e 7 ((Goal walk-to :?place :?) nil nil) "Walk-holding-nothing")
(76 x 19 ((Monkey blank :?loc floor) (:?place :?loc) #object[clojure.core$eval1922$fn__1923 0x3486d1a "clojure.core$eval1922$fn__1923@3486d1a"]) "Walk-holding-nothing" 0 (:?place :?fids) #object[clojure.core$eval1926$fn__1927 0x6c1f93d2 "clojure.core$eval1926$fn__1927@6c1f93d2"])
(77 e 7 ((Goal walk-to :?place :?) nil nil) "Walk-holding-object")
(78 x 20 ((Monkey :?obj :?loc floor) (:?place :?obj :?loc) #object[clojure.core$eval1930$fn__1931 0xe372559 "clojure.core$eval1930$fn__1931@e372559"]) "Walk-holding-object" 0 (:?place :?obj :?fids) #object[clojure.core$eval1935$fn__1936 0x337c7d0a "clojure.core$eval1935$fn__1936@337c7d0a"])
(79 e 18 ((Goal on floor :?) nil nil) "Jump-onto-floor")
(80 x 2 ((Monkey :? :? :?on) (:?on) #object[clojure.core$eval1939$fn__1940 0x77fb5cfe "clojure.core$eval1939$fn__1940@77fb5cfe"]) "Jump-onto-floor" 0 (:?on :?fids) #object[clojure.core$eval1943$fn__1944 0x6b4397ab "clojure.core$eval1943$fn__1944@6b4397ab"])
(81 e 14 ((Goal on :?obj :?) nil nil) "Walk-to-place-to-climb")
(82 i 4 ((Thing :?place :?obj :? :?) nil nil))
(83 i 2 ((Monkey :? :?loc :?) (:?place :?loc) #object[clojure.core$eval1947$fn__1948 0xb4c69ba "clojure.core$eval1947$fn__1948@b4c69ba"]))
(84 x 7 (not (Goal walk-to :?place :?) nil nil) "Walk-to-place-to-climb" 0 (:?place) #object[clojure.core$eval1951$fn__1952 0x7e8fd922 "clojure.core$eval1951$fn__1952@7e8fd922"])
(85 e 14 ((Goal on :?obj :?) nil nil) "Drop-to-climb")
(86 i 4 ((Thing :?place :?obj :? :?) nil nil))
(87 i 2 ((Monkey :?hold :?place :?) (:?hold) #object[clojure.core$eval1955$fn__1956 0x5eba0968 "clojure.core$eval1955$fn__1956@5eba0968"]))
(88 x 15 (not (Goal hold blank :?) nil nil) "Drop-to-climb" 0 () #object[clojure.core$eval1959$fn__1960 0x608f15f2 "clojure.core$eval1959$fn__1960@608f15f2"])
(89 e 14 ((Goal on :?obj :?) nil nil) "Climb-indirectly")
(90 i 4 ((Thing :?place :?obj :?on :?) nil nil))
(91 i 16 ((Monkey blank :?place :?on2) (:?on2 :?on :?obj) #object[clojure.core$eval1963$fn__1964 0x45b569b5 "clojure.core$eval1963$fn__1964@45b569b5"]))
(92 x 14 (not (Goal on :?on :?) nil nil) "Climb-indirectly" 0 (:?on) #object[clojure.core$eval1968$fn__1969 0x71d826de "clojure.core$eval1968$fn__1969@71d826de"])
(93 e 14 ((Goal on :?obj :?) nil nil) "Climb-directly")
(94 i 4 ((Thing :?place :?obj :?on :?) nil nil))
(95 x 16 ((Monkey blank :?place :?on) nil nil) "Climb-directly" 0 (:?obj :?fids) #object[clojure.core$eval1972$fn__1973 0x25ea155 "clojure.core$eval1972$fn__1973@25ea155"])
(96 e 14 ((Goal on :?obj :?) nil nil) "Already-on-object")
(97 x 2 ((Monkey :? :? :?obj) nil nil) "Already-on-object" 0 (:?fids) #object[clojure.core$eval1976$fn__1977 0x5f79a641 "clojure.core$eval1976$fn__1977@5f79a641"])
(98 e 21 ((Goal eat :?obj :?) nil nil) "Hold-to-eat")
(99 i 2 ((Monkey :?h :? :?) (:?h :?obj) #object[clojure.core$eval1980$fn__1981 0x174ee9 "clojure.core$eval1980$fn__1981@174ee9"]))
(100 x 3 (not (Goal hold :?obj :?) nil nil) "Hold-to-eat" 0 (:?obj) #object[clojure.core$eval1984$fn__1985 0x41a7e0ad "clojure.core$eval1984$fn__1985@41a7e0ad"])
(101 e 21 ((Goal eat :?name :?) nil nil) "Satisfy-hunger")
(102 i 2 ((Monkey :?name :? :?) nil nil))
(103 x 4 ((Thing :? :?name :? :?) nil nil) "Satisfy-hunger" 0 (:?fids :?name) #object[clojure.core$eval1988$fn__1989 0x2cf44765 "clojure.core$eval1988$fn__1989@2cf44765"])
