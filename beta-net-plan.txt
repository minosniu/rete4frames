(0 e 0 (goal-is-to {argument1 ?chest, action unlock} nil nil) hold-chest-to-put-on-floor)
(1 i 1 (thing {on-top-of ?surf, name ?chest, weight light} [?surf] #<core$eval1198$fn__1199 rete.core$eval1198$fn__1199@10b16391>))
(2 x 2 (monkey {holding ?thing} [?chest ?thing] #<core$eval1202$fn__1203 rete.core$eval1202$fn__1203@bdd6a16>) hold-chest-to-put-on-floor 0 [?chest] #<core$eval1207$fn__1208 rete.core$eval1207$fn__1208@6a331017>)
(3 e 0 (goal-is-to {argument1 ?chest, action unlock} nil nil) put-chest-on-floor)
(4 i 2 (monkey {location ?place, on-top-of ?on, holding ?chest} nil nil))
(5 x 3 (thing {name ?chest} nil nil) put-chest-on-floor 0 [?chest ?place ?on ?fids] #<core$eval1211$fn__1212 rete.core$eval1211$fn__1212@627b3555>)
(6 e 0 (goal-is-to {argument1 ?obj, action unlock} nil nil) get-key-to-unlock)
(7 i 4 (thing {on-top-of floor, name ?obj} nil nil))
(8 i 5 (chest {name ?obj, unlocked-by ?key} nil nil))
(9 x 2 (monkey {holding ?thing} [?thing ?key] #<core$eval1215$fn__1216 rete.core$eval1215$fn__1216@70dc6f58>) get-key-to-unlock 0 [?key] #<core$eval1220$fn__1221 rete.core$eval1220$fn__1221@79d6ab4e>)
(10 e 0 (goal-is-to {argument1 ?chest, action unlock} nil nil) move-to-chest-with-key)
(11 i 2 (monkey {location ?mplace, holding ?key} nil nil))
(12 i 4 (thing {location ?cplace, on-top-of floor, name ?chest} [?cplace ?mplace] #<core$eval1224$fn__1225 rete.core$eval1224$fn__1225@721870dc>))
(13 x 5 (chest {name ?chest, unlocked-by ?key} [?cplace] #<core$eval1228$fn__1229 rete.core$eval1228$fn__1229@3a6460b2>) move-to-chest-with-key 0 [?cplace] #<core$eval1232$fn__1233 rete.core$eval1232$fn__1233@3cb3d591>)
(14 e 0 (goal-is-to {argument1 ?name, action unlock} nil nil) unlock-chest-with-key)
(15 i 5 (chest {contents ?contents, name ?name, unlocked-by ?key} nil nil))
(16 i 3 (thing {location ?place, on-top-of ?on, name ?name} nil nil))
(17 x 2 (monkey {location ?place, on-top-of ?on, holding ?key} nil nil) unlock-chest-with-key 0 [?place ?fids ?contents ?name ?key] #<core$eval1236$fn__1237 rete.core$eval1236$fn__1237@7633f09>)
(18 e 6 (goal-is-to {argument1 ?obj, action hold} nil nil) unlock-chest-to-hold-object)
(19 x 5 (chest {contents ?obj, name ?chest} [?chest] #<core$eval1240$fn__1241 rete.core$eval1240$fn__1241@76f61156>) unlock-chest-to-hold-object 0 [?chest] #<core$eval1244$fn__1245 rete.core$eval1244$fn__1245@5d688dcf>)
(20 e 6 (goal-is-to {argument1 ?obj, action hold} nil nil) use-ladder-to-hold)
(21 x 7 (thing {location ?place, on-top-of ceiling, name ?obj, weight light} [?place] #<core$eval1248$fn__1249 rete.core$eval1248$fn__1249@6081ad10>) use-ladder-to-hold 0 [?place] #<core$eval1253$fn__1254 rete.core$eval1253$fn__1254@34175445>)
(22 e 6 (goal-is-to {argument1 ?obj, action hold} nil nil) climb-ladder-to-hold)
(23 i 7 (thing {location ?place, on-top-of ceiling, name ?obj, weight light} nil nil))
(24 i 8 (thing {location ?place, on-top-of floor, name ladder} nil nil))
(25 x 2 (monkey {on-top-of ?s} [?s] #<core$eval1257$fn__1258 rete.core$eval1257$fn__1258@4a59eead>) climb-ladder-to-hold 0 [] #<core$eval1262$fn__1263 rete.core$eval1262$fn__1263@477dfc2e>)
(26 e 6 (goal-is-to {argument1 ?name, action hold} nil nil) grab-object-from-ladder)
(27 i 7 (thing {location ?place, on-top-of ceiling, name ?name, weight light} nil nil))
(28 i 9 (thing {location ?place, name ladder} nil nil))
(29 x 10 (monkey {location ?place, on-top-of ladder, holding blank} nil nil) grab-object-from-ladder 0 [?fids ?name] #<core$eval1266$fn__1267 rete.core$eval1266$fn__1267@5d36368>)
(30 e 6 (goal-is-to {argument1 ?obj, action hold} nil nil) climb-to-hold)
(31 i 1 (thing {location ?place, on-top-of ?on, name ?obj, weight light} [?on] #<core$eval1270$fn__1271 rete.core$eval1270$fn__1271@1637bc9e>))
(32 x 2 (monkey {location ?place, on-top-of ?surf} [?on ?surf] #<core$eval1274$fn__1275 rete.core$eval1274$fn__1275@13460d69>) climb-to-hold 0 [?on] #<core$eval1279$fn__1280 rete.core$eval1279$fn__1280@50f8867e>)
(33 e 6 (goal-is-to {argument1 ?obj, action hold} nil nil) walk-to-hold)
(34 i 1 (thing {location ?place, on-top-of ?surf, name ?obj, weight light} [?surf] #<core$eval1283$fn__1284 rete.core$eval1283$fn__1284@6cfdbc53>))
(35 x 2 (monkey {location ?loc} [?place ?loc] #<core$eval1287$fn__1288 rete.core$eval1287$fn__1288@7f079e09>) walk-to-hold 0 [?place] #<core$eval1292$fn__1293 rete.core$eval1292$fn__1293@70d88496>)
(36 e 6 (goal-is-to {argument1 ?obj, action hold} nil nil) drop-to-hold)
(37 i 1 (thing {location ?place, on-top-of ?on, name ?obj, weight light} nil nil))
(38 x 2 (monkey {location ?place, on-top-of ?on, holding ?hold} [?hold] #<core$eval1296$fn__1297 rete.core$eval1296$fn__1297@1aa5d24b>) drop-to-hold 0 [] #<core$eval1301$fn__1302 rete.core$eval1301$fn__1302@3efb934d>)
(39 e 6 (goal-is-to {argument1 ?name, action hold} nil nil) grab-object)
(40 i 1 (thing {location ?place, on-top-of ?on, name ?name, weight light} nil nil))
(41 x 11 (monkey {location ?place, on-top-of ?on, holding blank} nil nil) grab-object 0 [?fids ?name] #<core$eval1305$fn__1306 rete.core$eval1305$fn__1306@3b3f1a01>)
(42 e 12 (goal-is-to {argument1 blank, action hold} nil nil) drop-object)
(43 i 2 (monkey {location ?place, on-top-of ?on, holding ?name} [?name] #<core$eval1309$fn__1310 rete.core$eval1309$fn__1310@41a33efb>))
(44 x 3 (thing {name ?name} nil nil) drop-object 0 [?place ?on ?fids ?name] #<core$eval1313$fn__1314 rete.core$eval1313$fn__1314@5f9c39ba>)
(45 e 13 (goal-is-to {argument2 ?place, argument1 ?obj, action move} nil nil) unlock-chest-to-move-object)
(46 x 5 (chest {contents ?obj, name ?chest} [?chest] #<core$eval1317$fn__1318 rete.core$eval1317$fn__1318@3baf655e>) unlock-chest-to-move-object 0 [?chest] #<core$eval1321$fn__1322 rete.core$eval1321$fn__1322@5f4badea>)
(47 e 13 (goal-is-to {argument2 ?place, argument1 ?obj, action move} nil nil) hold-object-to-move)
(48 i 1 (thing {location ?loc, name ?obj, weight light} [?place ?loc] #<core$eval1325$fn__1326 rete.core$eval1325$fn__1326@253725db>))
(49 x 2 (monkey {holding ?hold} [?obj ?hold] #<core$eval1329$fn__1330 rete.core$eval1329$fn__1330@608314f2>) hold-object-to-move 0 [?obj] #<core$eval1334$fn__1335 rete.core$eval1334$fn__1335@6613574a>)
(50 e 13 (goal-is-to {argument2 ?place, argument1 ?obj, action move} nil nil) move-object-to-place)
(51 x 2 (monkey {location ?loc, holding ?obj} [?place ?loc] #<core$eval1338$fn__1339 rete.core$eval1338$fn__1339@746a56f0>) move-object-to-place 0 [?place] #<core$eval1343$fn__1344 rete.core$eval1343$fn__1344@580760d7>)
(52 e 13 (goal-is-to {argument2 ?place, argument1 ?name, action move} nil nil) drop-object-once-moved)
(53 i 2 (monkey {location ?place, holding ?obj} nil nil))
(54 x 1 (thing {name ?name, weight light} nil nil) drop-object-once-moved 0 [?place ?fids ?name] #<core$eval1347$fn__1348 rete.core$eval1347$fn__1348@401a8346>)
(55 e 13 (goal-is-to {argument2 ?place, argument1 ?obj, action move} nil nil) already-moved-object)
(56 x 3 (thing {location ?place, name ?obj} nil nil) already-moved-object 0 [?fids] #<core$eval1351$fn__1352 rete.core$eval1351$fn__1352@260e3a17>)
(57 e 14 (goal-is-to {argument1 ?place, action walk-to} nil nil) already-at-place)
(58 x 2 (monkey {location ?place} nil nil) already-at-place 0 [?fids] #<core$eval1355$fn__1356 rete.core$eval1355$fn__1356@2e771727>)
(59 e 14 (goal-is-to {argument1 ?place, action walk-to} nil nil) get-on-floor-to-walk)
(60 x 2 (monkey {location ?loc, on-top-of ?surf} [?place ?loc ?surf] #<core$eval1359$fn__1360 rete.core$eval1359$fn__1360@730d4fcf>) get-on-floor-to-walk 0 [] #<core$eval1365$fn__1366 rete.core$eval1365$fn__1366@5e33b2e7>)
(61 e 14 (goal-is-to {argument1 ?place, action walk-to} nil nil) walk-holding-nothing)
(62 x 15 (monkey {location ?loc, on-top-of floor, holding blank} [?place ?loc] #<core$eval1369$fn__1370 rete.core$eval1369$fn__1370@2b2bec3e>) walk-holding-nothing 0 [?place ?fids] #<core$eval1373$fn__1374 rete.core$eval1373$fn__1374@7df92e01>)
(63 e 14 (goal-is-to {argument1 ?place, action walk-to} nil nil) walk-holding-object)
(64 x 16 (monkey {location ?loc, on-top-of floor, holding ?obj} [?place ?obj ?loc] #<core$eval1377$fn__1378 rete.core$eval1377$fn__1378@728c2df1>) walk-holding-object 0 [?place ?obj ?fids] #<core$eval1382$fn__1383 rete.core$eval1382$fn__1383@7e264154>)
(65 e 17 (goal-is-to {argument1 floor, action on} nil nil) jump-onto-floor)
(66 x 2 (monkey {on-top-of ?on} [?on] #<core$eval1386$fn__1387 rete.core$eval1386$fn__1387@83387>) jump-onto-floor 0 [?on ?fids] #<core$eval1390$fn__1391 rete.core$eval1390$fn__1391@2813e554>)
(67 e 18 (goal-is-to {argument1 ?obj, action on} nil nil) walk-to-place-to-climb)
(68 i 3 (thing {location ?place, name ?obj} nil nil))
(69 x 2 (monkey {location ?loc} [?place ?loc] #<core$eval1394$fn__1395 rete.core$eval1394$fn__1395@13836c80>) walk-to-place-to-climb 0 [?place] #<core$eval1399$fn__1400 rete.core$eval1399$fn__1400@78f02d62>)
(70 e 18 (goal-is-to {argument1 ?obj, action on} nil nil) drop-to-climb)
(71 i 3 (thing {location ?place, name ?obj} nil nil))
(72 x 2 (monkey {location ?place, holding ?hold} [?hold] #<core$eval1403$fn__1404 rete.core$eval1403$fn__1404@61e640d2>) drop-to-climb 0 [] #<core$eval1408$fn__1409 rete.core$eval1408$fn__1409@40ca99c9>)
(73 e 18 (goal-is-to {argument1 ?obj, action on} nil nil) climb-indirectly)
(74 i 3 (thing {location ?place, on-top-of ?on, name ?obj} nil nil))
(75 x 11 (monkey {location ?place, on-top-of ?on2, holding blank} [?on2 ?on ?obj] #<core$eval1412$fn__1413 rete.core$eval1412$fn__1413@22277671>) climb-indirectly 0 [?on] #<core$eval1418$fn__1419 rete.core$eval1418$fn__1419@11908def>)
(76 e 18 (goal-is-to {argument1 ?obj, action on} nil nil) climb-directly)
(77 i 3 (thing {location ?place, on-top-of ?on, name ?obj} nil nil))
(78 x 11 (monkey {location ?place, on-top-of ?on, holding blank} nil nil) climb-directly 0 [?obj ?fids] #<core$eval1422$fn__1423 rete.core$eval1422$fn__1423@213952a4>)
(79 e 18 (goal-is-to {argument1 ?obj, action on} nil nil) already-on-object)
(80 x 2 (monkey {on-top-of ?obj} nil nil) already-on-object 0 [?fids] #<core$eval1426$fn__1427 rete.core$eval1426$fn__1427@4af8d390>)
(81 e 19 (goal-is-to {argument1 ?obj, action eat} nil nil) hold-to-eat)
(82 x 2 (monkey {holding ?h} [?h ?obj] #<core$eval1430$fn__1431 rete.core$eval1430$fn__1431@27d0e91>) hold-to-eat 0 [?obj] #<core$eval1435$fn__1436 rete.core$eval1435$fn__1436@3d510e21>)
(83 e 19 (goal-is-to {argument1 ?name, action eat} nil nil) satisfy-hunger)
(84 i 2 (monkey {holding ?name} nil nil))
(85 x 3 (thing {name ?name} nil nil) satisfy-hunger 0 [?fids ?name] #<core$eval1439$fn__1440 rete.core$eval1439$fn__1440@27ddd608>)
