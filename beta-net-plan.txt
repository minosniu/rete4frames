(0 e 1 (goal-is-to {argument1 ?chest, action unlock} nil nil) hold-chest-to-put-on-floor)
(1 i 2 (thing {on-top-of ?surf, name ?chest, weight light} [?surf] #<core$eval11194$fn__11195 rete.core$eval11194$fn__11195@59671785>))
(2 x 3 (monkey {holding ?thing} [?chest ?thing] #<core$eval11198$fn__11199 rete.core$eval11198$fn__11199@460a2ad2>) hold-chest-to-put-on-floor 0 [?chest] #<core$eval11203$fn__11204 rete.core$eval11203$fn__11204@1a5e5e53>)
(3 e 1 (goal-is-to {argument1 ?chest, action unlock} nil nil) put-chest-on-floor)
(4 i 3 (monkey {location ?place, on-top-of ?on, holding ?chest} nil nil))
(5 x 4 (thing {name ?chest} nil nil) put-chest-on-floor 0 [?chest ?place ?on ?fids] #<core$eval11207$fn__11208 rete.core$eval11207$fn__11208@413692c8>)
(6 e 1 (goal-is-to {argument1 ?obj, action unlock} nil nil) get-key-to-unlock)
(7 i 5 (thing {on-top-of floor, name ?obj} nil nil))
(8 i 6 (chest {name ?obj, unlocked-by ?key} nil nil))
(9 x 3 (monkey {holding ?thing} [?thing ?key] #<core$eval11211$fn__11212 rete.core$eval11211$fn__11212@442ac6c1>) get-key-to-unlock 0 [?key] #<core$eval11216$fn__11217 rete.core$eval11216$fn__11217@7f23034b>)
(10 e 1 (goal-is-to {argument1 ?chest, action unlock} nil nil) move-to-chest-with-key)
(11 i 3 (monkey {location ?mplace, holding ?key} nil nil))
(12 i 5 (thing {location ?cplace, on-top-of floor, name ?chest} [?cplace ?mplace] #<core$eval11220$fn__11221 rete.core$eval11220$fn__11221@5a40ec31>))
(13 x 6 (chest {name ?chest, unlocked-by ?key} [?cplace] #<core$eval11224$fn__11225 rete.core$eval11224$fn__11225@729c1e43>) move-to-chest-with-key 0 [?cplace] #<core$eval11228$fn__11229 rete.core$eval11228$fn__11229@575fbed4>)
(14 e 1 (goal-is-to {argument1 ?name, action unlock} nil nil) unlock-chest-with-key)
(15 i 6 (chest {contents ?contents, name ?name, unlocked-by ?key} nil nil))
(16 i 4 (thing {location ?place, on-top-of ?on, name ?name} nil nil))
(17 x 3 (monkey {location ?place, on-top-of ?on, holding ?key} nil nil) unlock-chest-with-key 0 [?place ?fids ?contents ?name ?key] #<core$eval11232$fn__11233 rete.core$eval11232$fn__11233@2e70eea7>)
(18 e 7 (goal-is-to {argument1 ?obj, action hold} nil nil) unlock-chest-to-hold-object)
(19 x 6 (chest {contents ?obj, name ?chest} [?chest] #<core$eval11236$fn__11237 rete.core$eval11236$fn__11237@2bea494a>) unlock-chest-to-hold-object 0 [?chest] #<core$eval11240$fn__11241 rete.core$eval11240$fn__11241@35d2e49d>)
(20 e 7 (goal-is-to {argument1 ?obj, action hold} nil nil) use-ladder-to-hold)
(21 x 8 (thing {location ?place, on-top-of ceiling, name ?obj, weight light} [?place] #<core$eval11244$fn__11245 rete.core$eval11244$fn__11245@712cb99>) use-ladder-to-hold 0 [?place] #<core$eval11249$fn__11250 rete.core$eval11249$fn__11250@70dcef5>)
(22 e 7 (goal-is-to {argument1 ?obj, action hold} nil nil) climb-ladder-to-hold)
(23 i 8 (thing {location ?place, on-top-of ceiling, name ?obj, weight light} nil nil))
(24 i 9 (thing {location ?place, on-top-of floor, name ladder} nil nil))
(25 x 3 (monkey {on-top-of ?s} [?s] #<core$eval11253$fn__11254 rete.core$eval11253$fn__11254@49389270>) climb-ladder-to-hold 0 [] #<core$eval11258$fn__11259 rete.core$eval11258$fn__11259@323e0792>)
(26 e 7 (goal-is-to {argument1 ?name, action hold} nil nil) grab-object-from-ladder)
(27 i 8 (thing {location ?place, on-top-of ceiling, name ?name, weight light} nil nil))
(28 i 10 (thing {location ?place, name ladder} nil nil))
(29 x 11 (monkey {location ?place, on-top-of ladder, holding blank} nil nil) grab-object-from-ladder 0 [?fids ?name] #<core$eval11262$fn__11263 rete.core$eval11262$fn__11263@343e4e76>)
(30 e 7 (goal-is-to {argument1 ?obj, action hold} nil nil) climb-to-hold)
(31 i 2 (thing {location ?place, on-top-of ?on, name ?obj, weight light} [?on] #<core$eval11266$fn__11267 rete.core$eval11266$fn__11267@7d995757>))
(32 x 3 (monkey {location ?place, on-top-of ?surf} [?on ?surf] #<core$eval11270$fn__11271 rete.core$eval11270$fn__11271@39541633>) climb-to-hold 0 [?on] #<core$eval11275$fn__11276 rete.core$eval11275$fn__11276@3879c593>)
(33 e 7 (goal-is-to {argument1 ?obj, action hold} nil nil) walk-to-hold)
(34 i 2 (thing {location ?place, on-top-of ?surf, name ?obj, weight light} [?surf] #<core$eval11279$fn__11280 rete.core$eval11279$fn__11280@159a11dd>))
(35 x 3 (monkey {location ?loc} [?place ?loc] #<core$eval11283$fn__11284 rete.core$eval11283$fn__11284@6148270c>) walk-to-hold 0 [?place] #<core$eval11288$fn__11289 rete.core$eval11288$fn__11289@665d1a72>)
(36 e 7 (goal-is-to {argument1 ?obj, action hold} nil nil) drop-to-hold)
(37 i 2 (thing {location ?place, on-top-of ?on, name ?obj, weight light} nil nil))
(38 x 3 (monkey {location ?place, on-top-of ?on, holding ?hold} [?hold] #<core$eval11292$fn__11293 rete.core$eval11292$fn__11293@1e03acc7>) drop-to-hold 0 [] #<core$eval11297$fn__11298 rete.core$eval11297$fn__11298@7c6172b5>)
(39 e 7 (goal-is-to {argument1 ?name, action hold} nil nil) grab-object)
(40 i 2 (thing {location ?place, on-top-of ?on, name ?name, weight light} nil nil))
(41 x 12 (monkey {location ?place, on-top-of ?on, holding blank} nil nil) grab-object 0 [?fids ?name] #<core$eval11301$fn__11302 rete.core$eval11301$fn__11302@647798cd>)
(42 e 13 (goal-is-to {argument1 blank, action hold} nil nil) drop-object)
(43 i 3 (monkey {location ?place, on-top-of ?on, holding ?name} [?name] #<core$eval11305$fn__11306 rete.core$eval11305$fn__11306@349df0df>))
(44 x 4 (thing {name ?name} nil nil) drop-object 0 [?place ?on ?fids ?name] #<core$eval11309$fn__11310 rete.core$eval11309$fn__11310@2c63190b>)
(45 e 14 (goal-is-to {argument2 ?place, argument1 ?obj, action move} nil nil) unlock-chest-to-move-object)
(46 x 6 (chest {contents ?obj, name ?chest} [?chest] #<core$eval11313$fn__11314 rete.core$eval11313$fn__11314@4ad2c11>) unlock-chest-to-move-object 0 [?chest] #<core$eval11317$fn__11318 rete.core$eval11317$fn__11318@253d604d>)
(47 e 14 (goal-is-to {argument2 ?place, argument1 ?obj, action move} nil nil) hold-object-to-move)
(48 i 2 (thing {location ?loc, name ?obj, weight light} [?place ?loc] #<core$eval11321$fn__11322 rete.core$eval11321$fn__11322@377120d0>))
(49 x 3 (monkey {holding ?hold} [?obj ?hold] #<core$eval11325$fn__11326 rete.core$eval11325$fn__11326@64ecfb1f>) hold-object-to-move 0 [?obj] #<core$eval11330$fn__11331 rete.core$eval11330$fn__11331@4c2e0b96>)
(50 e 14 (goal-is-to {argument2 ?place, argument1 ?obj, action move} nil nil) move-object-to-place)
(51 x 3 (monkey {location ?loc, holding ?obj} [?place ?loc] #<core$eval11334$fn__11335 rete.core$eval11334$fn__11335@28d6ee5b>) move-object-to-place 0 [?place] #<core$eval11339$fn__11340 rete.core$eval11339$fn__11340@539f0ae7>)
(52 e 14 (goal-is-to {argument2 ?place, argument1 ?name, action move} nil nil) drop-object-once-moved)
(53 i 3 (monkey {location ?place, holding ?obj} nil nil))
(54 x 2 (thing {name ?name, weight light} nil nil) drop-object-once-moved 0 [?place ?fids ?name] #<core$eval11343$fn__11344 rete.core$eval11343$fn__11344@1913531c>)
(55 e 14 (goal-is-to {argument2 ?place, argument1 ?obj, action move} nil nil) already-moved-object)
(56 x 4 (thing {location ?place, name ?obj} nil nil) already-moved-object 0 [?fids] #<core$eval11347$fn__11348 rete.core$eval11347$fn__11348@2921a642>)
(57 e 15 (goal-is-to {argument1 ?place, action walk-to} nil nil) already-at-place)
(58 x 3 (monkey {location ?place} nil nil) already-at-place 0 [?fids] #<core$eval11351$fn__11352 rete.core$eval11351$fn__11352@2bd640b2>)
(59 e 15 (goal-is-to {argument1 ?place, action walk-to} nil nil) get-on-floor-to-walk)
(60 x 3 (monkey {location ?loc, on-top-of ?surf} [?place ?loc ?surf] #<core$eval11355$fn__11356 rete.core$eval11355$fn__11356@4622fec1>) get-on-floor-to-walk 0 [] #<core$eval11361$fn__11362 rete.core$eval11361$fn__11362@5c85a1be>)
(61 e 15 (goal-is-to {argument1 ?place, action walk-to} nil nil) walk-holding-nothing)
(62 x 16 (monkey {location ?loc, on-top-of floor, holding blank} [?place ?loc] #<core$eval11365$fn__11366 rete.core$eval11365$fn__11366@410b7f7c>) walk-holding-nothing 0 [?place ?fids] #<core$eval11369$fn__11370 rete.core$eval11369$fn__11370@794d6ef3>)
(63 e 15 (goal-is-to {argument1 ?place, action walk-to} nil nil) walk-holding-object)
(64 x 17 (monkey {location ?loc, on-top-of floor, holding ?obj} [?place ?obj ?loc] #<core$eval11373$fn__11374 rete.core$eval11373$fn__11374@1939169c>) walk-holding-object 0 [?place ?obj ?fids] #<core$eval11378$fn__11379 rete.core$eval11378$fn__11379@1209a1ef>)
(65 e 18 (goal-is-to {argument1 floor, action on} nil nil) jump-onto-floor)
(66 x 3 (monkey {on-top-of ?on} [?on] #<core$eval11382$fn__11383 rete.core$eval11382$fn__11383@6d49d192>) jump-onto-floor 0 [?on ?fids] #<core$eval11386$fn__11387 rete.core$eval11386$fn__11387@c28fc01>)
(67 e 19 (goal-is-to {argument1 ?obj, action on} nil nil) walk-to-place-to-climb)
(68 i 4 (thing {location ?place, name ?obj} nil nil))
(69 x 3 (monkey {location ?loc} [?place ?loc] #<core$eval11390$fn__11391 rete.core$eval11390$fn__11391@1cd6758f>) walk-to-place-to-climb 0 [?place] #<core$eval11395$fn__11396 rete.core$eval11395$fn__11396@797be525>)
(70 e 19 (goal-is-to {argument1 ?obj, action on} nil nil) drop-to-climb)
(71 i 4 (thing {location ?place, name ?obj} nil nil))
(72 x 3 (monkey {location ?place, holding ?hold} [?hold] #<core$eval11399$fn__11400 rete.core$eval11399$fn__11400@3d921f18>) drop-to-climb 0 [] #<core$eval11404$fn__11405 rete.core$eval11404$fn__11405@2ce584ab>)
(73 e 19 (goal-is-to {argument1 ?obj, action on} nil nil) climb-indirectly)
(74 i 4 (thing {location ?place, on-top-of ?on, name ?obj} nil nil))
(75 x 12 (monkey {location ?place, on-top-of ?on2, holding blank} [?on2 ?on ?obj] #<core$eval11408$fn__11409 rete.core$eval11408$fn__11409@213cd1fe>) climb-indirectly 0 [?on] #<core$eval11414$fn__11415 rete.core$eval11414$fn__11415@f5ea547>)
(76 e 19 (goal-is-to {argument1 ?obj, action on} nil nil) climb-directly)
(77 i 4 (thing {location ?place, on-top-of ?on, name ?obj} nil nil))
(78 x 12 (monkey {location ?place, on-top-of ?on, holding blank} nil nil) climb-directly 0 [?obj ?fids] #<core$eval11418$fn__11419 rete.core$eval11418$fn__11419@2cf314fb>)
(79 e 19 (goal-is-to {argument1 ?obj, action on} nil nil) already-on-object)
(80 x 3 (monkey {on-top-of ?obj} nil nil) already-on-object 0 [?fids] #<core$eval11422$fn__11423 rete.core$eval11422$fn__11423@fc1466c>)
(81 e 20 (goal-is-to {argument1 ?obj, action eat} nil nil) hold-to-eat)
(82 x 3 (monkey {holding ?h} [?h ?obj] #<core$eval11426$fn__11427 rete.core$eval11426$fn__11427@40014da3>) hold-to-eat 0 [?obj] #<core$eval11431$fn__11432 rete.core$eval11431$fn__11432@3e6cad07>)
(83 e 20 (goal-is-to {argument1 ?name, action eat} nil nil) satisfy-hunger)
(84 i 3 (monkey {holding ?name} nil nil))
(85 x 4 (thing {name ?name} nil nil) satisfy-hunger 0 [?fids ?name] #<core$eval11435$fn__11436 rete.core$eval11435$fn__11436@4d392d4e>)
