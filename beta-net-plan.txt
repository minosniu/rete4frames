(0 e 0 ((Goal unlock :?chest :?) nil nil) "Hold-chest-to-put-on-floor")
(1 i 1 ((Thing :? :?chest :?surf light) (:?surf) #object[clojure.core$eval32863$fn__32864 0x27dc1292 "clojure.core$eval32863$fn__32864@27dc1292"]))
(2 i 2 ((Monkey :?thing :? :?) (:?chest :?thing) #object[clojure.core$eval32867$fn__32868 0xa9243a4 "clojure.core$eval32867$fn__32868@a9243a4"]))
(3 x 3 (not (Goal hold :?chest :?) nil nil) "Hold-chest-to-put-on-floor" 0 (:?chest) #object[clojure.core$eval32871$fn__32872 0x4a4490c5 "clojure.core$eval32871$fn__32872@4a4490c5"])
(4 e 0 ((Goal unlock :?chest :?) nil nil) "Put-chest-on-floor")
(5 i 2 ((Monkey :?chest :?place :?on) nil nil))
(6 x 4 ((Thing :? :?chest :? :?) nil nil) "Put-chest-on-floor" 0 (:?chest :?place :?on :?fids) #object[clojure.core$eval32875$fn__32876 0x5acc92da "clojure.core$eval32875$fn__32876@5acc92da"])
(7 e 0 ((Goal unlock :?obj :?) nil nil) "Get-key-to-unlock")
(8 i 5 ((Thing :? :?obj floor :?) nil nil))
(9 i 6 ((Chest :? :?obj :?key) nil nil))
(10 i 2 ((Monkey :?thing :? :?) (:?thing :?key) #object[clojure.core$eval32879$fn__32880 0x39d52769 "clojure.core$eval32879$fn__32880@39d52769"]))
(11 x 3 (not (Goal hold :?key :?) nil nil) "Get-key-to-unlock" 0 (:?key) #object[clojure.core$eval32883$fn__32884 0x172230ef "clojure.core$eval32883$fn__32884@172230ef"])
(12 e 0 ((Goal unlock :?chest :?) nil nil) "Move-to-chest-with-key")
(13 i 2 ((Monkey :?key :?mplace :?) nil nil))
(14 i 5 ((Thing :?cplace :?chest floor :?) (:?cplace :?mplace) #object[clojure.core$eval32887$fn__32888 0x2cfecdbc "clojure.core$eval32887$fn__32888@2cfecdbc"]))
(15 i 6 ((Chest :? :?chest :?key) nil nil))
(16 x 7 (not (Goal walk-to :?cplace :?) nil nil) "Move-to-chest-with-key" 0 (:?cplace) #object[clojure.core$eval32891$fn__32892 0x3eea5a2 "clojure.core$eval32891$fn__32892@3eea5a2"])
(17 e 0 ((Goal unlock :?name :?) nil nil) "Unlock-chest-with-key")
(18 i 6 ((Chest :?contents :?name :?key) nil nil))
(19 i 4 ((Thing :?place :?name :?on :?) nil nil))
(20 x 2 ((Monkey :?key :?place :?on) nil nil) "Unlock-chest-with-key" 0 (:?place :?fids :?contents :?name :?key) #object[clojure.core$eval32895$fn__32896 0x22134a25 "clojure.core$eval32895$fn__32896@22134a25"])
(21 e 3 ((Goal hold :?obj :?) nil nil) "Unlock-chest-to-hold-object")
(22 i 6 ((Chest :?obj :?chest :?) nil nil))
(23 x 0 (not (Goal unlock :?chest :?) nil nil) "Unlock-chest-to-hold-object" 0 (:?chest) #object[clojure.core$eval32899$fn__32900 0x9eb104f "clojure.core$eval32899$fn__32900@9eb104f"])
(24 e 3 ((Goal hold :?obj :?) nil nil) "Use-ladder-to-hold")
(25 i 8 ((Thing :?place :?obj ceiling light) nil nil))
(26 i 9 (not (Thing :?place ladder :? :?) nil nil))
(27 x 10 (not (Goal move ladder :?place) nil nil) "Use-ladder-to-hold" 0 (:?place) #object[clojure.core$eval32903$fn__32904 0xe5faf6f "clojure.core$eval32903$fn__32904@e5faf6f"])
(28 e 3 ((Goal hold :?obj :?) nil nil) "Climb-ladder-to-hold")
(29 i 8 ((Thing :?place :?obj ceiling light) nil nil))
(30 i 11 ((Thing :?place ladder floor :?) nil nil))
(31 i 2 ((Monkey :? :? :?s) (:?s) #object[clojure.core$eval32907$fn__32908 0x7b18f0ba "clojure.core$eval32907$fn__32908@7b18f0ba"]))
(32 x 12 (not (Goal on ladder :?) nil nil) "Climb-ladder-to-hold" 0 () #object[clojure.core$eval32911$fn__32912 0x4432ab81 "clojure.core$eval32911$fn__32912@4432ab81"])
(33 e 3 ((Goal hold :?name :?) nil nil) "Grab-object-from-ladder")
(34 i 8 ((Thing :?place :?name ceiling light) nil nil))
(35 i 9 ((Thing :?place ladder :? :?) nil nil))
(36 x 13 ((Monkey blank :?place ladder) nil nil) "Grab-object-from-ladder" 0 (:?fids :?name) #object[clojure.core$eval32915$fn__32916 0x5cbadd5b "clojure.core$eval32915$fn__32916@5cbadd5b"])
(37 e 3 ((Goal hold :?obj :?) nil nil) "Climb-to-hold")
(38 i 1 ((Thing :?place :?obj :?on light) (:?on) #object[clojure.core$eval32919$fn__32920 0x3198f473 "clojure.core$eval32919$fn__32920@3198f473"]))
(39 i 2 ((Monkey :? :?place :?surf) (:?on :?surf) #object[clojure.core$eval32923$fn__32924 0x1c9b5139 "clojure.core$eval32923$fn__32924@1c9b5139"]))
(40 x 14 (not (Goal on :?on :?) nil nil) "Climb-to-hold" 0 (:?on) #object[clojure.core$eval32927$fn__32928 0x4245648f "clojure.core$eval32927$fn__32928@4245648f"])
(41 e 3 ((Goal hold :?obj :?) nil nil) "Walk-to-hold")
(42 i 1 ((Thing :?place :?obj :?surf light) (:?surf) #object[clojure.core$eval32931$fn__32932 0x219272d5 "clojure.core$eval32931$fn__32932@219272d5"]))
(43 i 2 ((Monkey :? :?loc :?) (:?place :?loc) #object[clojure.core$eval32935$fn__32936 0x5d1cef76 "clojure.core$eval32935$fn__32936@5d1cef76"]))
(44 x 7 (not (Goal walk-to :?place :?) nil nil) "Walk-to-hold" 0 (:?place) #object[clojure.core$eval32939$fn__32940 0x5e69aa3 "clojure.core$eval32939$fn__32940@5e69aa3"])
(45 e 3 ((Goal hold :?obj :?) nil nil) "Drop-to-hold")
(46 i 1 ((Thing :?place :?obj :?on light) nil nil))
(47 i 2 ((Monkey :?hold :?place :?on) (:?hold) #object[clojure.core$eval32943$fn__32944 0x1f7ef12 "clojure.core$eval32943$fn__32944@1f7ef12"]))
(48 x 15 (not (Goal hold blank :?) nil nil) "Drop-to-hold" 0 () #object[clojure.core$eval32947$fn__32948 0x7c027025 "clojure.core$eval32947$fn__32948@7c027025"])
(49 e 3 ((Goal hold :?name :?) nil nil) "Grab-object")
(50 i 1 ((Thing :?place :?name :?on light) nil nil))
(51 x 16 ((Monkey blank :?place :?on) nil nil) "Grab-object" 0 (:?fids :?name) #object[clojure.core$eval32951$fn__32952 0x6977b16a "clojure.core$eval32951$fn__32952@6977b16a"])
(52 e 15 ((Goal hold blank :?) nil nil) "Drop-object")
(53 i 2 ((Monkey :?name :?place :?on) (:?name) #object[clojure.core$eval32955$fn__32956 0x58c27f83 "clojure.core$eval32955$fn__32956@58c27f83"]))
(54 x 4 ((Thing :? :?name :? :?) nil nil) "Drop-object" 0 (:?place :?on :?fids :?name) #object[clojure.core$eval32959$fn__32960 0x5efaa959 "clojure.core$eval32959$fn__32960@5efaa959"])
(55 e 17 ((Goal move :?obj :?place) nil nil) "Unlock-chest-to-move-object")
(56 i 6 ((Chest :?obj :?chest :?) nil nil))
(57 x 0 (not (Goal unlock :?chest :?) nil nil) "Unlock-chest-to-move-object" 0 (:?chest) #object[clojure.core$eval32963$fn__32964 0x7c12bc2d "clojure.core$eval32963$fn__32964@7c12bc2d"])
(58 e 17 ((Goal move :?obj :?place) nil nil) "Hold-object-to-move")
(59 i 1 ((Thing :?loc :?obj :? light) (:?place :?loc) #object[clojure.core$eval32967$fn__32968 0x302ca788 "clojure.core$eval32967$fn__32968@302ca788"]))
(60 i 2 ((Monkey :?hold :? :?) (:?obj :?hold) #object[clojure.core$eval32971$fn__32972 0x6397b9b9 "clojure.core$eval32971$fn__32972@6397b9b9"]))
(61 x 3 (not (Goal hold :?obj :?) nil nil) "Hold-object-to-move" 0 (:?obj) #object[clojure.core$eval32975$fn__32976 0x5e747d64 "clojure.core$eval32975$fn__32976@5e747d64"])
(62 e 17 ((Goal move :?obj :?place) nil nil) "Move-object-to-place")
(63 i 2 ((Monkey :?obj :?loc :?) (:?place :?loc) #object[clojure.core$eval32979$fn__32980 0x7ca7fc86 "clojure.core$eval32979$fn__32980@7ca7fc86"]))
(64 x 7 (not (Goal walk-to :?place :?) nil nil) "Move-object-to-place" 0 (:?place) #object[clojure.core$eval32983$fn__32984 0x43f8983d "clojure.core$eval32983$fn__32984@43f8983d"])
(65 e 17 ((Goal move :?name :?place) nil nil) "Drop-object-once-moved")
(66 i 2 ((Monkey :?obj :?place :?) nil nil))
(67 x 1 ((Thing :? :?name :? light) nil nil) "Drop-object-once-moved" 0 (:?place :?fids :?name) #object[clojure.core$eval32987$fn__32988 0x61a1734f "clojure.core$eval32987$fn__32988@61a1734f"])
(68 e 17 ((Goal move :?obj :?place) nil nil) "Already-moved-object")
(69 x 4 ((Thing :?place :?obj :? :?) nil nil) "Already-moved-object" 0 (:?fids) #object[clojure.core$eval32991$fn__32992 0x7d839633 "clojure.core$eval32991$fn__32992@7d839633"])
(70 e 7 ((Goal walk-to :?place :?) nil nil) "Already-at-place")
(71 x 2 ((Monkey :? :?place :?) nil nil) "Already-at-place" 0 (:?fids) #object[clojure.core$eval32995$fn__32996 0x400a0d41 "clojure.core$eval32995$fn__32996@400a0d41"])
(72 e 7 ((Goal walk-to :?place :?) nil nil) "Get-on-floor-to-walk")
(73 i 2 ((Monkey :? :?loc :?surf) (:?place :?loc :?surf) #object[clojure.core$eval32999$fn__33000 0x2fb683fb "clojure.core$eval32999$fn__33000@2fb683fb"]))
(74 x 18 (not (Goal on floor :?) nil nil) "Get-on-floor-to-walk" 0 () #object[clojure.core$eval33004$fn__33005 0x685df80c "clojure.core$eval33004$fn__33005@685df80c"])
(75 e 7 ((Goal walk-to :?place :?) nil nil) "Walk-holding-nothing")
(76 x 19 ((Monkey blank :?loc floor) (:?place :?loc) #object[clojure.core$eval33008$fn__33009 0x2627dd5a "clojure.core$eval33008$fn__33009@2627dd5a"]) "Walk-holding-nothing" 0 (:?place :?fids) #object[clojure.core$eval33012$fn__33013 0xcbb8be "clojure.core$eval33012$fn__33013@cbb8be"])
(77 e 7 ((Goal walk-to :?place :?) nil nil) "Walk-holding-object")
(78 x 20 ((Monkey :?obj :?loc floor) (:?place :?obj :?loc) #object[clojure.core$eval33016$fn__33017 0x180dd215 "clojure.core$eval33016$fn__33017@180dd215"]) "Walk-holding-object" 0 (:?place :?obj :?fids) #object[clojure.core$eval33021$fn__33022 0x79393a12 "clojure.core$eval33021$fn__33022@79393a12"])
(79 e 18 ((Goal on floor :?) nil nil) "Jump-onto-floor")
(80 x 2 ((Monkey :? :? :?on) (:?on) #object[clojure.core$eval33025$fn__33026 0x2d1b8a23 "clojure.core$eval33025$fn__33026@2d1b8a23"]) "Jump-onto-floor" 0 (:?on :?fids) #object[clojure.core$eval33029$fn__33030 0x1113896e "clojure.core$eval33029$fn__33030@1113896e"])
(81 e 14 ((Goal on :?obj :?) nil nil) "Walk-to-place-to-climb")
(82 i 4 ((Thing :?place :?obj :? :?) nil nil))
(83 i 2 ((Monkey :? :?loc :?) (:?place :?loc) #object[clojure.core$eval33033$fn__33034 0x2b411d99 "clojure.core$eval33033$fn__33034@2b411d99"]))
(84 x 7 (not (Goal walk-to :?place :?) nil nil) "Walk-to-place-to-climb" 0 (:?place) #object[clojure.core$eval33037$fn__33038 0x51ed0be8 "clojure.core$eval33037$fn__33038@51ed0be8"])
(85 e 14 ((Goal on :?obj :?) nil nil) "Drop-to-climb")
(86 i 4 ((Thing :?place :?obj :? :?) nil nil))
(87 i 2 ((Monkey :?hold :?place :?) (:?hold) #object[clojure.core$eval33041$fn__33042 0x142121f2 "clojure.core$eval33041$fn__33042@142121f2"]))
(88 x 15 (not (Goal hold blank :?) nil nil) "Drop-to-climb" 0 () #object[clojure.core$eval33045$fn__33046 0x4d4e335e "clojure.core$eval33045$fn__33046@4d4e335e"])
(89 e 14 ((Goal on :?obj :?) nil nil) "Climb-indirectly")
(90 i 4 ((Thing :?place :?obj :?on :?) nil nil))
(91 i 16 ((Monkey blank :?place :?on2) (:?on2 :?on :?obj) #object[clojure.core$eval33049$fn__33050 0x5722c3c9 "clojure.core$eval33049$fn__33050@5722c3c9"]))
(92 x 14 (not (Goal on :?on :?) nil nil) "Climb-indirectly" 0 (:?on) #object[clojure.core$eval33054$fn__33055 0xc7e6743 "clojure.core$eval33054$fn__33055@c7e6743"])
(93 e 14 ((Goal on :?obj :?) nil nil) "Climb-directly")
(94 i 4 ((Thing :?place :?obj :?on :?) nil nil))
(95 x 16 ((Monkey blank :?place :?on) nil nil) "Climb-directly" 0 (:?obj :?fids) #object[clojure.core$eval33058$fn__33059 0x2d30ef1b "clojure.core$eval33058$fn__33059@2d30ef1b"])
(96 e 14 ((Goal on :?obj :?) nil nil) "Already-on-object")
(97 x 2 ((Monkey :? :? :?obj) nil nil) "Already-on-object" 0 (:?fids) #object[clojure.core$eval33062$fn__33063 0xc78a911 "clojure.core$eval33062$fn__33063@c78a911"])
(98 e 21 ((Goal eat :?obj :?) nil nil) "Hold-to-eat")
(99 i 2 ((Monkey :?h :? :?) (:?h :?obj) #object[clojure.core$eval33066$fn__33067 0x5f18caa6 "clojure.core$eval33066$fn__33067@5f18caa6"]))
(100 x 3 (not (Goal hold :?obj :?) nil nil) "Hold-to-eat" 0 (:?obj) #object[clojure.core$eval33070$fn__33071 0xb009662 "clojure.core$eval33070$fn__33071@b009662"])
(101 e 21 ((Goal eat :?name :?) nil nil) "Satisfy-hunger")
(102 i 2 ((Monkey :?name :? :?) nil nil))
(103 x 4 ((Thing :? :?name :? :?) nil nil) "Satisfy-hunger" 0 (:?fids :?name) #object[clojure.core$eval33074$fn__33075 0x11dc76c5 "clojure.core$eval33074$fn__33075@11dc76c5"])
