(0 e 0 ((goal-is-to unlock ?chest ?) nil nil) hold-chest-to-put-on-floor)
(1 i 1 ((thing ? ?chest ?surf light) [?surf] #<core$eval604$fn__605 rete.core$eval604$fn__605@7075ddad>))
(2 i 2 ((monkey ?thing ? ?) [?chest ?thing] #<core$eval608$fn__609 rete.core$eval608$fn__609@1dc0fec>))
(3 x 3 (not (goal-is-to hold ?chest ?) nil nil) hold-chest-to-put-on-floor 10 [?chest] #<core$eval612$fn__613 rete.core$eval612$fn__613@715c057c>)
(4 e 0 ((goal-is-to unlock ?chest ?) nil nil) put-chest-on-floor)
(5 i 2 ((monkey ?chest ?place ?on) nil nil))
(6 x 4 ((thing ? ?chest ? ?) nil nil) put-chest-on-floor 10 [?chest ?place ?on ?fids] #<core$eval616$fn__617 rete.core$eval616$fn__617@51e3e2a2>)
(7 e 0 ((goal-is-to unlock ?obj ?) nil nil) get-key-to-unlock)
(8 i 5 ((thing ? ?obj floor ?) nil nil))
(9 i 6 ((chest ? ?obj ?key) nil nil))
(10 i 2 ((monkey ?thing ? ?) [?thing ?key] #<core$eval620$fn__621 rete.core$eval620$fn__621@8a6bf88>))
(11 x 3 (not (goal-is-to hold ?key ?) nil nil) get-key-to-unlock 10 [?key] #<core$eval624$fn__625 rete.core$eval624$fn__625@25bbd50b>)
(12 e 0 ((goal-is-to unlock ?chest ?) nil nil) move-to-chest-with-key)
(13 i 2 ((monkey ?key ?mplace ?) nil nil))
(14 i 5 ((thing ?cplace ?chest floor ?) [?cplace ?mplace] #<core$eval628$fn__629 rete.core$eval628$fn__629@4243a4d>))
(15 i 6 ((chest ? ?chest ?key) nil nil))
(16 x 7 (not (goal-is-to walk-to ?cplace ?) nil nil) move-to-chest-with-key 10 [?cplace] #<core$eval632$fn__633 rete.core$eval632$fn__633@77241aac>)
(17 e 0 ((goal-is-to unlock ?name ?) nil nil) unlock-chest-with-key)
(18 i 6 ((chest ?contents ?name ?key) nil nil))
(19 i 4 ((thing ?place ?name ?on ?) nil nil))
(20 x 2 ((monkey ?key ?place ?on) nil nil) unlock-chest-with-key 10 [?place ?fids ?contents ?name ?key] #<core$eval636$fn__637 rete.core$eval636$fn__637@71782572>)
(21 e 3 ((goal-is-to hold ?obj ?) nil nil) unlock-chest-to-hold-object)
(22 i 6 ((chest ?obj ?chest ?) nil nil))
(23 x 0 (not (goal-is-to unlock ?chest ?) nil nil) unlock-chest-to-hold-object 10 [?chest] #<core$eval640$fn__641 rete.core$eval640$fn__641@6ae1f1f1>)
(24 e 3 ((goal-is-to hold ?obj ?) nil nil) use-ladder-to-hold)
(25 i 8 ((thing ?place ?obj ceiling light) nil nil))
(26 i 9 (not (thing ?place ladder ? ?) nil nil))
(27 x 10 (not (goal-is-to move ladder ?place) nil nil) use-ladder-to-hold 10 [?place] #<core$eval644$fn__645 rete.core$eval644$fn__645@42f40b16>)
(28 e 3 ((goal-is-to hold ?obj ?) nil nil) climb-ladder-to-hold)
(29 i 8 ((thing ?place ?obj ceiling light) nil nil))
(30 i 11 ((thing ?place ladder floor ?) nil nil))
(31 i 2 ((monkey ? ? ?s) [?s] #<core$eval648$fn__649 rete.core$eval648$fn__649@75ad0070>))
(32 x 12 (not (goal-is-to on ladder ?) nil nil) climb-ladder-to-hold 10 [] #<core$eval652$fn__653 rete.core$eval652$fn__653@3dbbc2b0>)
(33 e 3 ((goal-is-to hold ?name ?) nil nil) grab-object-from-ladder)
(34 i 8 ((thing ?place ?name ceiling light) nil nil))
(35 i 9 ((thing ?place ladder ? ?) nil nil))
(36 x 13 ((monkey blank ?place ladder) nil nil) grab-object-from-ladder 10 [?fids ?name] #<core$eval656$fn__657 rete.core$eval656$fn__657@4c9fc626>)
(37 e 3 ((goal-is-to hold ?obj ?) nil nil) climb-to-hold)
(38 i 1 ((thing ?place ?obj ?on light) [?on] #<core$eval660$fn__661 rete.core$eval660$fn__661@7150c2b0>))
(39 i 2 ((monkey ? ?place ?surf) [?on ?surf] #<core$eval664$fn__665 rete.core$eval664$fn__665@595660c3>))
(40 x 14 (not (goal-is-to on ?on ?) nil nil) climb-to-hold 10 [?on] #<core$eval668$fn__669 rete.core$eval668$fn__669@1ac2122c>)
(41 e 3 ((goal-is-to hold ?obj ?) nil nil) walk-to-hold)
(42 i 1 ((thing ?place ?obj ?surf light) [?surf] #<core$eval672$fn__673 rete.core$eval672$fn__673@7ab7d928>))
(43 i 2 ((monkey ? ?loc ?) [?place ?loc] #<core$eval676$fn__677 rete.core$eval676$fn__677@71051c99>))
(44 x 7 (not (goal-is-to walk-to ?place ?) nil nil) walk-to-hold 10 [?place] #<core$eval680$fn__681 rete.core$eval680$fn__681@d81bb68>)
(45 e 3 ((goal-is-to hold ?obj ?) nil nil) drop-to-hold)
(46 i 1 ((thing ?place ?obj ?on light) nil nil))
(47 i 2 ((monkey ?hold ?place ?on) [?hold] #<core$eval684$fn__685 rete.core$eval684$fn__685@3740f768>))
(48 x 15 (not (goal-is-to hold blank ?) nil nil) drop-to-hold 10 [] #<core$eval688$fn__689 rete.core$eval688$fn__689@2199457f>)
(49 e 3 ((goal-is-to hold ?name ?) nil nil) grab-object)
(50 i 1 ((thing ?place ?name ?on light) nil nil))
(51 x 16 ((monkey blank ?place ?on) nil nil) grab-object 10 [?fids ?name] #<core$eval692$fn__693 rete.core$eval692$fn__693@17c34b3c>)
(52 e 15 ((goal-is-to hold blank ?) nil nil) drop-object)
(53 i 2 ((monkey ?name ?place ?on) [?name] #<core$eval696$fn__697 rete.core$eval696$fn__697@76377d53>))
(54 x 4 ((thing ? ?name ? ?) nil nil) drop-object 10 [?place ?on ?fids ?name] #<core$eval700$fn__701 rete.core$eval700$fn__701@559c4c8e>)
(55 e 17 ((goal-is-to move ?obj ?place) nil nil) unlock-chest-to-move-object)
(56 i 6 ((chest ?obj ?chest ?) nil nil))
(57 x 0 (not (goal-is-to unlock ?chest ?) nil nil) unlock-chest-to-move-object 10 [?chest] #<core$eval704$fn__705 rete.core$eval704$fn__705@54ab68b>)
(58 e 17 ((goal-is-to move ?obj ?place) nil nil) hold-object-to-move)
(59 i 1 ((thing ?loc ?obj ? light) [?place ?loc] #<core$eval708$fn__709 rete.core$eval708$fn__709@607aaba3>))
(60 i 2 ((monkey ?hold ? ?) [?obj ?hold] #<core$eval712$fn__713 rete.core$eval712$fn__713@34e0907c>))
(61 x 3 (not (goal-is-to hold ?obj ?) nil nil) hold-object-to-move 10 [?obj] #<core$eval716$fn__717 rete.core$eval716$fn__717@760eb691>)
(62 e 17 ((goal-is-to move ?obj ?place) nil nil) move-object-to-place)
(63 i 2 ((monkey ?obj ?loc ?) [?place ?loc] #<core$eval720$fn__721 rete.core$eval720$fn__721@7cde5f11>))
(64 x 7 (not (goal-is-to walk-to ?place ?) nil nil) move-object-to-place 10 [?place] #<core$eval724$fn__725 rete.core$eval724$fn__725@48d3b591>)
(65 e 17 ((goal-is-to move ?name ?place) nil nil) drop-object-once-moved)
(66 i 2 ((monkey ?obj ?place ?) nil nil))
(67 x 1 ((thing ? ?name ? light) nil nil) drop-object-once-moved 10 [?place ?fids ?name] #<core$eval728$fn__729 rete.core$eval728$fn__729@46e9e26a>)
(68 e 17 ((goal-is-to move ?obj ?place) nil nil) already-moved-object)
(69 x 4 ((thing ?place ?obj ? ?) nil nil) already-moved-object 10 [?fids] #<core$eval732$fn__733 rete.core$eval732$fn__733@7c55e052>)
(70 e 7 ((goal-is-to walk-to ?place ?) nil nil) already-at-place)
(71 x 2 ((monkey ? ?place ?) nil nil) already-at-place 10 [?fids] #<core$eval736$fn__737 rete.core$eval736$fn__737@5e562dcf>)
(72 e 7 ((goal-is-to walk-to ?place ?) nil nil) get-on-floor-to-walk)
(73 i 2 ((monkey ? ?loc ?surf) [?place ?loc ?surf] #<core$eval740$fn__741 rete.core$eval740$fn__741@4ef0916c>))
(74 x 18 (not (goal-is-to on floor ?) nil nil) get-on-floor-to-walk 10 [] #<core$eval745$fn__746 rete.core$eval745$fn__746@7ebc7f3f>)
(75 e 7 ((goal-is-to walk-to ?place ?) nil nil) walk-holding-nothing)
(76 x 19 ((monkey blank ?loc floor) [?place ?loc] #<core$eval749$fn__750 rete.core$eval749$fn__750@32e3e421>) walk-holding-nothing 10 [?place ?fids] #<core$eval753$fn__754 rete.core$eval753$fn__754@9d135b6>)
(77 e 7 ((goal-is-to walk-to ?place ?) nil nil) walk-holding-object)
(78 x 20 ((monkey ?obj ?loc floor) [?place ?obj ?loc] #<core$eval757$fn__758 rete.core$eval757$fn__758@24c2ffbc>) walk-holding-object 10 [?place ?obj ?fids] #<core$eval762$fn__763 rete.core$eval762$fn__763@1fe09add>)
(79 e 18 ((goal-is-to on floor ?) nil nil) jump-onto-floor)
(80 x 2 ((monkey ? ? ?on) [?on] #<core$eval766$fn__767 rete.core$eval766$fn__767@61a05ea4>) jump-onto-floor 10 [?on ?fids] #<core$eval770$fn__771 rete.core$eval770$fn__771@5af2318d>)
(81 e 14 ((goal-is-to on ?obj ?) nil nil) walk-to-place-to-climb)
(82 i 4 ((thing ?place ?obj ? ?) nil nil))
(83 i 2 ((monkey ? ?loc ?) [?place ?loc] #<core$eval774$fn__775 rete.core$eval774$fn__775@2ee99497>))
(84 x 7 (not (goal-is-to walk-to ?place ?) nil nil) walk-to-place-to-climb 10 [?place] #<core$eval778$fn__779 rete.core$eval778$fn__779@48e1949c>)
(85 e 14 ((goal-is-to on ?obj ?) nil nil) drop-to-climb)
(86 i 4 ((thing ?place ?obj ? ?) nil nil))
(87 i 2 ((monkey ?hold ?place ?) [?hold] #<core$eval782$fn__783 rete.core$eval782$fn__783@4710e7e5>))
(88 x 15 (not (goal-is-to hold blank ?) nil nil) drop-to-climb 10 [] #<core$eval786$fn__787 rete.core$eval786$fn__787@19a8ac5e>)
(89 e 14 ((goal-is-to on ?obj ?) nil nil) climb-indirectly)
(90 i 4 ((thing ?place ?obj ?on ?) nil nil))
(91 i 16 ((monkey blank ?place ?on2) [?on2 ?on ?obj] #<core$eval790$fn__791 rete.core$eval790$fn__791@3d5366b>))
(92 x 14 (not (goal-is-to on ?on ?) nil nil) climb-indirectly 10 [?on] #<core$eval795$fn__796 rete.core$eval795$fn__796@8922394>)
(93 e 14 ((goal-is-to on ?obj ?) nil nil) climb-directly)
(94 i 4 ((thing ?place ?obj ?on ?) nil nil))
(95 x 16 ((monkey blank ?place ?on) nil nil) climb-directly 10 [?obj ?fids] #<core$eval799$fn__800 rete.core$eval799$fn__800@7b55dc1e>)
(96 e 14 ((goal-is-to on ?obj ?) nil nil) already-on-object)
(97 x 2 ((monkey ? ? ?obj) nil nil) already-on-object 10 [?fids] #<core$eval803$fn__804 rete.core$eval803$fn__804@36edbe9f>)
(98 e 21 ((goal-is-to eat ?obj ?) nil nil) hold-to-eat)
(99 i 2 ((monkey ?h ? ?) [?h ?obj] #<core$eval807$fn__808 rete.core$eval807$fn__808@6752c50>))
(100 x 3 (not (goal-is-to hold ?obj ?) nil nil) hold-to-eat 10 [?obj] #<core$eval811$fn__812 rete.core$eval811$fn__812@93bce4d>)
(101 e 21 ((goal-is-to eat ?name ?) nil nil) satisfy-hunger)
(102 i 2 ((monkey ?name ? ?) nil nil))
(103 x 4 ((thing ? ?name ? ?) nil nil) satisfy-hunger 10 [?fids ?name] #<core$eval815$fn__816 rete.core$eval815$fn__816@7928bbfa>)
